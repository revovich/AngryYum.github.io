blockquote,body,code,dd,div,dl,dt,fieldset,form,h1,h2,h3,h4,h5,h6,input,li,p,pre,td,textarea,th,ul{margin:0;padding:0}table{border-collapse:collapse;border-spacing:0}abbr,fieldset,img{border:0}address,caption,cite,code,dfn,em,strong,th,var{font-style:normal;font-weight:400}ul li{list-style:none}caption,th{text-align:left}h1,h2,h3,h4,h5,h6{font-size:100%;font-weight:400}sup{vertical-align:text-top}sub{vertical-align:text-bottom}input,select,textarea{font-family:inherit;font-size:inherit;font-weight:inherit}legend{color:#000}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}img{max-width:100%;height:auto}*{box-sizing:border-box;outline:0;text-decoration:none}.wrapper{max-width:1170px;margin:0 auto;padding-left:30px;padding-right:30px;width:100%}.wrapper-full{padding-left:30px;padding-right:30px;width:100%}main{margin-top:60px}body{font-size:16px;font-family:Roboto,"Futura PT"}.title-page{font-size:2.8125em;color:#fff;text-transform:uppercase;text-align:center;line-height:1.2em;font-weight:600;letter-spacing:6px}.prev-page{color:#fff;font-size:1.675em;font-weight:300;text-align:center;max-width:1000px;margin:30px auto 0}.fw100{font-weight:100}.red{color:#bd242b}.white{color:#fff}.bot-line{position:relative;padding-bottom:10px;margin-bottom:15px}.bot-line::after{position:absolute;content:'';width:70px;height:4px;background-color:#bd242b;left:0;bottom:0}.bot-line::before{position:absolute;content:'';width:100%;height:1px;bottom:2px;left:0;background-color:#acacac}.thenks-blog-top-news-info{position:absolute;color:#fff;text-transform:uppercase;top:25px;left:25px;font-size:11px;background-color:#bd242b;display:inline-block;padding:5px 10px;text-align:center;border-radius:5px;z-index:20}.btn-main{display:block;border:2px solid #bd242b;border-radius:5px;padding:12px 24px;text-transform:uppercase;margin:0 auto;cursor:pointer;font-weight:700;-webkit-transition:.5s ease-in-out;transition:.5s ease-in-out}.btn-ops{background:0 0;color:#bd242b}.btn-red{background-color:#bd242b;color:#fff}.line-grey .bot-grey{position:relative;padding-bottom:50px}.line-grey .bot-grey::after{position:absolute;content:'';width:90%;height:1px;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);bottom:0;background-color:rgba(122,122,122,.5)}.main-wrap{display:none;position:fixed;left:0;top:0;width:100vw;height:100%;background-color:rgba(0,0,0,.5);z-index:900}.popap-content{font-family:Roboto;display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;position:fixed;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);background-color:#fff;max-width:600px;width:80%;z-index:950;padding:60px 80px;box-shadow:0 0 10px 0 rgba(0,0,0,.5);border-radius:15px}.popap-content-form{max-width:550px}.popap-content-title{text-align:center;text-transform:uppercase;font-size:1.875em;color:#2c2c2c;line-height:1.5;font-weight:600;margin-bottom:20px}.popap-content-text{display:block;font-weight:300;text-align:center;color:#2c2c2c;font-size:1em;margin-bottom:40px}.popap-content-label{font-family:"Futura PT",Roboto;color:#2c2c2c;font-size:1.125em;display:block;margin-bottom:5px;font-weight:300}.popap-content-label-wrap{margin-bottom:20px}.popap-content-label-wrap .popap-content-label{margin-bottom:15px}.popap-content-label-wrap input[type=checkbox]{display:none}.popap-content-label-wrap label{position:relative;margin-right:30px;padding-left:20px;cursor:pointer}.popap-content-label-wrap label::after{position:absolute;content:'';width:12px;height:12px;left:0;top:50%;border-radius:3px;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);border:1px solid #2c2c2c;-webkit-transition:.5s ease-in-out;transition:.5s ease-in-out;line-height:1;font-size:13px;color:#fff}.popap-content-label-wrap input[type=checkbox]:checked+label::after{background-color:#bd242b;content:'âœ”'}.popap-content-input{font-family:Roboto;font-weight:300;display:block;width:100%;padding:10px 15px;border-radius:10px;border:1px solid #2c2c2c;margin-bottom:15px}.popap-content-submit{width:100%;background-color:#bd242b;border:none;color:#fff;padding:15px 0;border-radius:15px;cursor:pointer}.popap-content-end{display:block;text-align:center;font-size:.75em;color:#2c2c2c;margin-top:10px}.popap-content-close{position:absolute;right:30px;top:30px;z-index:990;cursor:pointer;height:22px;padding-top:11px}.popap-content-close:hover .popap-content-close-line,.popap-content-close:hover .popap-content-close-line::after{background-color:#bd242b}.popap-content-close-line{position:relative;display:block;width:17px;height:4px;background-color:#2c2c2c;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg);-webkit-transition:.5s ease-in-out;transition:.5s ease-in-out}.popap-content-close-line::after{position:absolute;content:'';display:block;width:17px;height:4px;background-color:#2c2c2c;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);-webkit-transition:.5s ease-in-out;transition:.5s ease-in-out}.line-grey{position:relative;padding-bottom:80px}.line-grey::after{position:absolute;content:'';width:90%;height:1px;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);bottom:0;background-color:rgba(44,44,44,.5)}.footer-video-title-time{margin-bottom:40px}.animate-line{position:relative;overflow:hidden}.animate-line::after{position:absolute;content:'';width:20px;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg);height:250%;left:-20%;top:-30px;background-color:rgba(255,255,255,.5)}.header-animate{position:relative}.header-animate-item{display:none}@-webkit-keyframes btnRed{0%{left:-30%}100%{left:150%}}@keyframes btnRed{0%{left:-30%}100%{left:150%}}.news-wrapper .page_preview{height:500px}.news-top{position:relative;z-index:100;background-color:#fff;padding:60px}.news-header{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center}.news-header-atr{display:inline-block;color:#2c2c2c;text-transform:uppercase;letter-spacing:3.3px;font-weight:100;cursor:pointer;-webkit-transition:.5s ease-in-out;transition:.5s ease-in-out;text-align:center}.news-header-atr-wrap{display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;flex-wrap:wrap;margin-bottom:45px}.news-header-title{text-transform:uppercase;color:#2c2c2c;font-size:2.18em;font-weight:600;text-align:center;margin-bottom:65px}.news-header-data{display:block;width:100%;border-top:1px solid #acacac;border-bottom:1px solid #acacac;text-align:center;padding:15px 0 15px 5px;font-weight:100;font-size:17px;color:#2c2c2c;margin-bottom:65px}.news-content{color:#2c2c2c;font-weight:400;line-height:2em;font-size:16px}.news-content a{color:#4169e1;-webkit-transition:.5s ease-in-out;transition:.5s ease-in-out}.news-content ol,.news-content ul{padding-left:0;margin-left:48px;margin-bottom:25px;margin-top:0}.news-content ul li{list-style:disc}.news-content img,.news-content p{margin-bottom:25px}.news-content h2,.news-content h3,.news-content h4{color:#808285;font-size:14pt;font-weight:500;margin-bottom:5px}.news-contact{margin-top:60px}.news-contact .prev-page{font-weight:500;text-align:left;font-size:1.3em;text-transform:uppercase}.news-contact i{position:relative;width:105px;height:45px;line-height:45px;text-align:center;cursor:pointer;font-size:22px;margin-right:20px;border-radius:10px;-webkit-transition:.5s ease-in-out;transition:.5s ease-in-out}.news-contact i:last-of-type{margin-right:0}.news-contact-co{margin-top:25px}.news-colbak{position:relative;display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;margin-top:25px;min-height:280px;background-position:center;background-size:100% 100%;border-radius:20px;max-width:680px;padding:0 60px;cursor:pointer;color:#fff;-webkit-transition:1.5s ease-in-out;transition:1.5s ease-in-out}.news-colbak::before{position:absolute;content:'';left:0;top:0;width:100%;height:100%;background-color:rgba(0,0,0,.5);border-radius:20px}.news-colbak-title{position:relative;font-size:1.43em;font-weight:500;margin-bottom:20px;-webkit-transition:1s ease-in-out;transition:1s ease-in-out;text-align:center}.news-colbak-prev{display:block;position:relative;font-size:1.13em;font-weight:300;margin-bottom:20px;text-align:center;-webkit-transition:1.3s ease-in-out;transition:1.3s ease-in-out}.news-colbak-btn{position:relative;background:0 0;border:1px solid #fff;color:#fff;padding:10px 25px;border-radius:20px;font-size:1em;cursor:pointer;-webkit-transition:1.5s ease-in-out;transition:1.5s ease-in-out}.news-end{margin-top:40px}.news-end .left-blog-header-title{text-transform:none}.news-end-wrap{display:-webkit-box;display:flex;flex-wrap:wrap;margin-left:-7.5px;margin-right:-7.5px;-webkit-box-pack:center;justify-content:center}.news-end-wrap-item{width:calc(50% - 15px)}.news-end-wrap-item-link{display:block;position:relative;border:1px solid #fff}.news-end-wrap-item-link::before{position:absolute;content:'';top:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,.5);opacity:0;-webkit-transition:.5s ease-in-out;transition:.5s ease-in-out}.news-end-wrap-item-img{display:block}.news-end-wrap-item-title{position:absolute;bottom:20px;left:15px;color:#fff}.news .aside-blog-form{top:0;position:relative;border:none}.news .left-blog{margin-right:30px}.news .thenks-blog-top-news-info{left:auto;right:10px}.news .card-item{position:relative;margin-bottom:30px;padding:0;max-width:280px}.news .card-item-img img{border-radius:10px 10px 0 0}.news .card-item-title{padding:0 10px}@media (min-width:800px){.btn-main:hover,.btn-ops:hover{background-color:#bd242b;color:#fff}.btn-red:hover{background:0 0;color:#bd242b}.animate-line:hover::after{-webkit-animation:4s infinite btnRed;animation:4s infinite btnRed}.news-content a:hover,.news-header-atr:hover{color:#bd242b}.news-contact i:hover{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)}.news-colbak:hover{background-size:120% 120%}.news-colbak:hover .news-colbak-title{-webkit-transform:scale(1.2);-ms-transform:scale(1.2);transform:scale(1.2)}.news-colbak:hover .news-colbak-prev{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)}.news-colbak:hover .news-colbak-btn{background-color:#fff;-webkit-transform:scale(1.15);-ms-transform:scale(1.15);transform:scale(1.15);color:#2c2c2c}.news-end-wrap-item-link:hover::before{opacity:1}}@media (max-width:1200px){.wrapper{padding:0 15px}}@media screen and (max-width:1100px){.wrapper,.wrapper-full{padding-left:15px;padding-right:15px}}@media (max-width:1050px){.news-top{padding:20px 10px}.news .main-content-blog{-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;margin-top:20px;padding-bottom:10px}.news .aside-blog{max-width:200px}}@media (max-width:950px){body{font-size:14px}}@media (max-width:940px){.popap-content{padding:15px 30px}.popap-content-close{right:10px;top:3px}}@media (max-width:830px){.title-page{font-size:2.5em}.prev-page{font-size:1.4em}}@media (max-width:820px){.news-header-atr-wrap,.news-header-data,.news-header-title{margin-bottom:20px}}@media (max-width:780px){.news .header-btn{width:100%}.news .main-content-blog{-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.news .aside-blog,.news .aside-blog-form,.news .card-item{max-width:100%}}@media (max-width:730px){.news-header-title{font-size:1.5em;margin-bottom:40px}}@media (max-width:630px){.news-end-wrap-item{width:calc(100% - 15px)}}@media (max-width:560px){.news .wrapper{padding:0}.news-colbak{padding:0 15px}}@media (max-width:520px){.news-contact i{width:45%;margin-bottom:20px}}@media (max-width:460px){.popap-content{width:95%}.news-contact i{width:100%;margin-right:0}}@media (max-width:390px){.popap-content-label-wrap{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}}@media (max-height:700px){.popap-content{overflow:scroll}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5ld3MuY3NzIiwic21hcnQtZ3JpZC5sZXNzIiwiY29uc3QubGVzcyIsIm5ld3MubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvQkEsV0M4VUksS0RwVkosS0FWQSxHQUhBLElBQ0EsR0FDQSxHQWFBLFNBREEsS0FSQSxHQUNBLEdBQ0EsR0FDQSxHQUNBLEdBQ0EsR0FLQSxNQVhBLEdBYUEsRUFOQSxJQVNBLEdBSkEsU0FHQSxHQWhCQSxHQzhWUSxPQUFBLEVBQ0EsUUFBQSxFRHpVUixNQzZVUSxnQkFBQSxTRDNVTixlQUFBLEVBS0YsS0N3VWlCLFNEelVqQixJQzRVSSxPQUFBLEVBQXFCLFFEdFV6QixRQUNBLEtBQ0EsS0FDQSxJQUNBLEdBQ0EsT0FDQSxHQUNBLElDbVVPLFdBQUEsT0FDQyxZQUFBLElBRUksTUFDSixXQUFBLEtBRUQsUUQvVFAsR0MrVGEsV0FBQSxLRDNUYixHQUNBLEdBQ0EsR0FDQSxHQUNBLEdBQ0EsR0M2VEksVUFBQSxLQUNJLFlBQUEsSUFFRSxJQUFTLGVBQUEsU0R2VG5CLElBQ0UsZUFBQSxZQUdGLE1BRUEsT0FEQSxTQzBUa0IsWUFBQSxRQUFRLFVBQUEsUUFBVyxZQUFBLFFBQXFCLE9BQU8sTUFBQSxLQUFpQixRRDlTbEYsTUFDQSxRQUNBLFdBQ0EsT0FDQSxPQUNBLE9BQ0EsT0FJQSxLQUhBLEtBQ0EsSUFDQSxRRXJGQSxRQUFBLE1GMEZBLElDaEZJLFVBQUEsS0NGQSxPQUFBLEtGdUZKLEVBQ0UsV0FBQSxXQUNBLFFBQUEsRUFDQSxnQkFBQSxLQUdGLFNBQ0UsVUFBQSxPQUNBLE9BQUEsRUFBQSxLQUNBLGFBQUEsS0FDQSxjQUFBLEtFdkdFLE1BQUEsS0YyR0osY0FDRSxhQUFBLEtFeEdGLGNBQUEsS0RHSSxNQUFBLEtEMEdKLEtDOEpJLFdBQUEsS0QxSkosS0FDRSxVQUFBLEtBQ0EsWUFBQSxNQUFBLENBQUEsWUFHRixZRS9HQSxVQUFBLFNBQ0ksTUFBQSxLQUNBLGVBQUEsVUZpSEYsV0FBQSxPRWhIRSxZQUFB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QSxFQUFBLE1IbWVoQixxQ0FDRSxTRzljRSxjQUZJLGFBQUEsS0h1ZEosY0FBQSxNQVNKLDBCR3ZkUSxVSHlkSixRQUFBLEtBQUEsS0FHRix5QkFDRSxtQkFBQSxXQUFBLHNCQUFBLE9BQUEsZUFBQSxJQUNBLFdBQUEsS0d0ZkosZUFBQSxLQUFBLGtCQWlDUSxVQUFBLE9IOGRSLHlCR3pkUSxLQUNBLFVBQUEsTUg4ZFIseUJBQ0UsZUd4ZE0sUUFBQSxLQUFBLEtBR0EscUJBQUEsTUFBQSxLQUNJLElBQUEsS0g4ZFoseUJBQ0UsWUd2ZFcsVUFBQSxNSCtkWCxXQUNFLFVBQUEsT0FJSix5QkFDRSxzQkFRQSxrQkFKQSxtQkFIRSxjQUFBLE1BWUoseUJBQ0Usa0JBQ0UsTUFBQSxLQUdGLHlCQUNFLG1CQUFBLFNBQUEsc0JBQUEsT0FBQSxlQUFBLE9BV0Ysa0JBUkEsdUJBSUEsaUJBSEUsVUFBQSxNQVlKLHlCQUNFLG1CQUNFLFVBQUEsTUFDQSxjQUFBLE1BSUoseUJBQ0Usb0JBQ0UsTUFBQSxtQkFJSix5QkFDRSxlQUNFLFFBQUEsRUFHRixhQUNFLFFBQUEsRUFBQSxNQUlKLHlCQUNFLGdCQUNFLE1BQUEsSUFDQSxjQUFBLE1BSUoseUJBQ0UsZUFDRSxNQUFBLElBR0YsZ0JBQ0UsTUFBQSxLQUNBLGFBQUEsR0FJSix5QkFDRSwwQkFDRSxRQUFBLFlBQUEsUUFBQSxLQUNBLG1CQUFBLFNBQUEsc0JBQUEsT0FBQSxlQUFBLFFBSUosMEJBQ0UsZUFDRSxTQUFBIiwiZmlsZSI6Im5ld3MuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSxcbmRpdixcbmRsLFxuZHQsXG5kZCxcbnVsLFxubGksXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYsXG5wcmUsXG5jb2RlLFxuZm9ybSxcbmZpZWxkc2V0LFxuaW5wdXQsXG50ZXh0YXJlYSxcbnAsXG5ibG9ja3F1b3RlLFxudGgsXG50ZCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxuZmllbGRzZXQsXG5pbWcsXG5hYmJyIHtcbiAgYm9yZGVyOiAwO1xufVxuXG5hZGRyZXNzLFxuY2FwdGlvbixcbmNpdGUsXG5jb2RlLFxuZGZuLFxuZW0sXG5zdHJvbmcsXG50aCxcbnZhciB7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbn1cblxudWwgbGkge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5jYXB0aW9uLFxudGgge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICBmb250LXNpemU6IDEwMCU7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG5cbnN1cCB7XG4gIHZlcnRpY2FsLWFsaWduOiB0ZXh0LXRvcDtcbn1cblxuc3ViIHtcbiAgdmVydGljYWwtYWxpZ246IHRleHQtYm90dG9tO1xufVxuXG5pbnB1dCxcbnRleHRhcmVhLFxuc2VsZWN0IHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbmxlZ2VuZCB7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5pbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbn1cblxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIG91dGxpbmU6IG5vbmU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLndyYXBwZXIge1xuICBtYXgtd2lkdGg6IDExNzBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmctbGVmdDogMzBweDtcbiAgcGFkZGluZy1yaWdodDogMzBweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi53cmFwcGVyLWZ1bGwge1xuICBwYWRkaW5nLWxlZnQ6IDMwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDMwcHg7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5tYWluIHtcbiAgbWFyZ2luLXRvcDogNjBweDtcbn1cblxuYm9keSB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBcIkZ1dHVyYSBQVFwiO1xufVxuXG4udGl0bGUtcGFnZSB7XG4gIGZvbnQtc2l6ZTogMi44MTI1ZW07XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGxpbmUtaGVpZ2h0OiAxLjJlbTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDZweDtcbn1cblxuLnByZXYtcGFnZSB7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXNpemU6IDEuNjc1ZW07XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWF4LXdpZHRoOiAxMDAwcHg7XG4gIG1hcmdpbjogMzBweCBhdXRvIDAgYXV0bztcbn1cblxuLmZ3MTAwIHtcbiAgZm9udC13ZWlnaHQ6IDEwMDtcbn1cblxuLnJlZCB7XG4gIGNvbG9yOiAjYmQyNDJiO1xufVxuXG4ud2hpdGUge1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmJvdC1saW5lIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbn1cblxuLmJvdC1saW5lOjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29udGVudDogJyc7XG4gIHdpZHRoOiA3MHB4O1xuICBoZWlnaHQ6IDRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2JkMjQyYjtcbiAgbGVmdDogMDtcbiAgYm90dG9tOiAwO1xufVxuXG4uYm90LWxpbmU6OmJlZm9yZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29udGVudDogJyc7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDFweDtcbiAgYm90dG9tOiAycHg7XG4gIGxlZnQ6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNhY2FjYWM7XG59XG5cbi50aGVua3MtYmxvZy10b3AtbmV3cy1pbmZvIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgdG9wOiAyNXB4O1xuICBsZWZ0OiAyNXB4O1xuICBmb250LXNpemU6IDExcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiZDI0MmI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZzogNXB4IDEwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICB6LWluZGV4OiAyMDtcbn1cblxuLmJ0bi1tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNiZDI0MmI7XG4gIGJvcmRlci1yYWRpdXM6IDVweCA1cHggNXB4IDVweDtcbiAgcGFkZGluZzogMTJweCAyNHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBtYXJnaW46IDAgYXV0bztcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgdHJhbnNpdGlvbjogMC41cyBlYXNlLWluLW91dDtcbn1cblxuLmJ0bi1vcHMge1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBjb2xvcjogI2JkMjQyYjtcbn1cblxuLmJ0bi1yZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmQyNDJiO1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmxpbmUtZ3JleSAuYm90LWdyZXkge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmctYm90dG9tOiA1MHB4O1xufVxuXG4ubGluZS1ncmV5IC5ib3QtZ3JleTo6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGNvbnRlbnQ6ICcnO1xuICB3aWR0aDogOTAlO1xuICBoZWlnaHQ6IDFweDtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gIGJvdHRvbTogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMjIsIDEyMiwgMTIyLCAwLjUpO1xufVxuXG4ubWFpbi13cmFwIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XG4gIHotaW5kZXg6IDkwMDtcbn1cblxuLnBvcGFwLWNvbnRlbnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgZGlzcGxheTogbm9uZTtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgbGVmdDogNTAlO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIG1heC13aWR0aDogNjAwcHg7XG4gIHdpZHRoOiA4MCU7XG4gIHotaW5kZXg6IDk1MDtcbiAgcGFkZGluZzogNjBweCA4MHB4O1xuICBib3gtc2hhZG93OiAwcHggMHB4IDEwcHggMHB4IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgYm9yZGVyLXJhZGl1czogMTVweCAxNXB4IDE1cHggMTVweDtcbn1cblxuLnBvcGFwLWNvbnRlbnQtZm9ybSB7XG4gIG1heC13aWR0aDogNTUwcHg7XG59XG5cbi5wb3BhcC1jb250ZW50LXRpdGxlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXNpemU6IDEuODc1ZW07XG4gIGNvbG9yOiAjMmMyYzJjO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LXdlaWdodDogNjAwO1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG4ucG9wYXAtY29udGVudC10ZXh0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICMyYzJjMmM7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBtYXJnaW4tYm90dG9tOiA0MHB4O1xufVxuXG4ucG9wYXAtY29udGVudC1sYWJlbCB7XG4gIGZvbnQtZmFtaWx5OiBcIkZ1dHVyYSBQVFwiLCBSb2JvdG87XG4gIGNvbG9yOiAjMmMyYzJjO1xuICBmb250LXNpemU6IDEuMTI1ZW07XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tYm90dG9tOiA1cHg7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG59XG5cbi5wb3BhcC1jb250ZW50LWxhYmVsLXdyYXAge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG4ucG9wYXAtY29udGVudC1sYWJlbC13cmFwIC5wb3BhcC1jb250ZW50LWxhYmVsIHtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbn1cblxuLnBvcGFwLWNvbnRlbnQtbGFiZWwtd3JhcCBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ucG9wYXAtY29udGVudC1sYWJlbC13cmFwIGxhYmVsIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW4tcmlnaHQ6IDMwcHg7XG4gIHBhZGRpbmctbGVmdDogMjBweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4ucG9wYXAtY29udGVudC1sYWJlbC13cmFwIGxhYmVsOjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29udGVudDogJyc7XG4gIHdpZHRoOiAxMnB4O1xuICBoZWlnaHQ6IDEycHg7XG4gIGxlZnQ6IDA7XG4gIHRvcDogNTAlO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgYm9yZGVyOiAxcHggc29saWQgIzJjMmMyYztcbiAgdHJhbnNpdGlvbjogMC41cyBlYXNlLWluLW91dDtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5wb3BhcC1jb250ZW50LWxhYmVsLXdyYXAgaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdOmNoZWNrZWQgKyBsYWJlbDo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmQyNDJiO1xuICBjb250ZW50OiAn4pyUJztcbn1cblxuLnBvcGFwLWNvbnRlbnQtaW5wdXQge1xuICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTBweCAxNXB4O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjMmMyYzJjO1xuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xufVxuXG4ucG9wYXAtY29udGVudC1zdWJtaXQge1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2JkMjQyYjtcbiAgYm9yZGVyOiBub25lO1xuICBjb2xvcjogI2ZmZjtcbiAgcGFkZGluZzogMTVweCAwO1xuICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5wb3BhcC1jb250ZW50LWVuZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMC43NWVtO1xuICBjb2xvcjogIzJjMmMyYztcbiAgbWFyZ2luLXRvcDogMTBweDtcbn1cblxuLnBvcGFwLWNvbnRlbnQtY2xvc2Uge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAzMHB4O1xuICB0b3A6IDMwcHg7XG4gIHotaW5kZXg6IDk5MDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBoZWlnaHQ6IDIycHg7XG4gIHBhZGRpbmctdG9wOiAxMXB4O1xufVxuXG4ucG9wYXAtY29udGVudC1jbG9zZTpob3ZlciAucG9wYXAtY29udGVudC1jbG9zZS1saW5lIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2JkMjQyYjtcbn1cblxuLnBvcGFwLWNvbnRlbnQtY2xvc2U6aG92ZXIgLnBvcGFwLWNvbnRlbnQtY2xvc2UtbGluZTo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmQyNDJiO1xufVxuXG4ucG9wYXAtY29udGVudC1jbG9zZS1saW5lIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDE3cHg7XG4gIGhlaWdodDogNHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmMyYzJjO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gIHRyYW5zaXRpb246IDAuNXMgZWFzZS1pbi1vdXQ7XG59XG5cbi5wb3BhcC1jb250ZW50LWNsb3NlLWxpbmU6OmFmdGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjb250ZW50OiAnJztcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxN3B4O1xuICBoZWlnaHQ6IDRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJjMmMyYztcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcbiAgdHJhbnNpdGlvbjogMC41cyBlYXNlLWluLW91dDtcbn1cblxuLmxpbmUtZ3JleSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy1ib3R0b206IDgwcHg7XG59XG5cbi5saW5lLWdyZXk6OmFmdGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjb250ZW50OiAnJztcbiAgd2lkdGg6IDkwJTtcbiAgaGVpZ2h0OiAxcHg7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICBib3R0b206IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNDQsIDQ0LCA0NCwgMC41KTtcbn1cblxuLmZvb3Rlci12aWRlby10aXRsZS10aW1lIHtcbiAgbWFyZ2luLWJvdHRvbTogNDBweDtcbn1cblxuLmFuaW1hdGUtbGluZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmFuaW1hdGUtbGluZTo6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGNvbnRlbnQ6ICcnO1xuICB3aWR0aDogMjBweDtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICBoZWlnaHQ6IDI1MCU7XG4gIGxlZnQ6IC0yMCU7XG4gIHRvcDogLTMwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcbn1cblxuLmhlYWRlci1hbmltYXRlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uaGVhZGVyLWFuaW1hdGUtaXRlbSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBrZXlmcmFtZXMgYnRuUmVkIHtcbiAgMCUge1xuICAgIGxlZnQ6IC0zMCU7XG4gIH1cblxuICAxMDAlIHtcbiAgICBsZWZ0OiAxNTAlO1xuICB9XG59XG5cbi5uZXdzLXdyYXBwZXIgLnBhZ2VfcHJldmlldyB7XG4gIGhlaWdodDogNTAwcHg7XG59XG5cbi5uZXdzLXRvcCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBwYWRkaW5nOiA2MHB4O1xufVxuXG4ubmV3cy1oZWFkZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLm5ld3MtaGVhZGVyLWF0ciB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgY29sb3I6ICMyYzJjMmM7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGxldHRlci1zcGFjaW5nOiAzLjNweDtcbiAgZm9udC13ZWlnaHQ6IDEwMDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiAwLjVzIGVhc2UtaW4tb3V0O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5uZXdzLWhlYWRlci1hdHItd3JhcCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIG1hcmdpbi1ib3R0b206IDQ1cHg7XG59XG5cbi5uZXdzLWhlYWRlci10aXRsZSB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAjMmMyYzJjO1xuICBmb250LXNpemU6IDIuMThlbTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiA2NXB4O1xufVxuXG4ubmV3cy1oZWFkZXItZGF0YSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNhY2FjYWM7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjYWNhY2FjO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDE1cHggMDtcbiAgZm9udC13ZWlnaHQ6IDEwMDtcbiAgcGFkZGluZy1sZWZ0OiA1cHg7XG4gIGZvbnQtc2l6ZTogMTdweDtcbiAgY29sb3I6ICMyYzJjMmM7XG4gIG1hcmdpbi1ib3R0b206IDY1cHg7XG59XG5cbi5uZXdzLWNvbnRlbnQge1xuICBjb2xvcjogIzJjMmMyYztcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IDJlbTtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuXG4ubmV3cy1jb250ZW50IGEge1xuICBjb2xvcjogIzQxNjllMTtcbiAgdHJhbnNpdGlvbjogMC41cyBlYXNlLWluLW91dDtcbn1cblxuLm5ld3MtY29udGVudCBvbCxcbi5uZXdzLWNvbnRlbnQgdWwge1xuICBwYWRkaW5nLWxlZnQ6IDA7XG4gIG1hcmdpbi1sZWZ0OiA0OHB4O1xuICBtYXJnaW4tYm90dG9tOiAyNXB4O1xuICBtYXJnaW4tdG9wOiAwO1xufVxuXG4ubmV3cy1jb250ZW50IHVsIGxpIHtcbiAgbGlzdC1zdHlsZTogZGlzYztcbn1cblxuLm5ld3MtY29udGVudCBwIHtcbiAgbWFyZ2luLWJvdHRvbTogMjVweDtcbn1cblxuLm5ld3MtY29udGVudCBpbWcge1xuICBtYXJnaW4tYm90dG9tOiAyNXB4O1xufVxuXG4ubmV3cy1jb250ZW50IGgyLFxuLm5ld3MtY29udGVudCBoMyxcbi5uZXdzLWNvbnRlbnQgaDQge1xuICBjb2xvcjogIzgwODI4NTtcbiAgZm9udC1zaXplOiAxNHB0O1xuICBmb250LXdlaWdodDogNTAwO1xuICBtYXJnaW4tYm90dG9tOiA1cHg7XG59XG5cbi5uZXdzLWNvbnRhY3Qge1xuICBtYXJnaW4tdG9wOiA2MHB4O1xufVxuXG4ubmV3cy1jb250YWN0IC5wcmV2LXBhZ2Uge1xuICBmb250LXdlaWdodDogNTAwO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXNpemU6IDEuM2VtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4ubmV3cy1jb250YWN0IGkge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDVweDtcbiAgaGVpZ2h0OiA0NXB4O1xuICBsaW5lLWhlaWdodDogNDVweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGZvbnQtc2l6ZTogMjJweDtcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICB0cmFuc2l0aW9uOiAwLjVzIGVhc2UtaW4tb3V0O1xufVxuXG4ubmV3cy1jb250YWN0IGk6bGFzdC1vZi10eXBlIHtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xufVxuXG4ubmV3cy1jb250YWN0LWNvIHtcbiAgbWFyZ2luLXRvcDogMjVweDtcbn1cblxuLm5ld3MtY29sYmFrIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWFyZ2luLXRvcDogMjVweDtcbiAgbWluLWhlaWdodDogMjgwcHg7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiAxMDAlIDEwMCU7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIG1heC13aWR0aDogNjgwcHg7XG4gIHBhZGRpbmc6IDAgNjBweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBjb2xvcjogI2ZmZjtcbiAgdHJhbnNpdGlvbjogMS41cyBlYXNlLWluLW91dDtcbn1cblxuLm5ld3MtY29sYmFrOjpiZWZvcmUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGNvbnRlbnQ6ICcnO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcbn1cblxuLm5ld3MtY29sYmFrLXRpdGxlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LXNpemU6IDEuNDNlbTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgdHJhbnNpdGlvbjogMXMgZWFzZS1pbi1vdXQ7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLm5ld3MtY29sYmFrLXByZXYge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LXNpemU6IDEuMTNlbTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0cmFuc2l0aW9uOiAxLjNzIGVhc2UtaW4tb3V0O1xufVxuXG4ubmV3cy1jb2xiYWstYnRuIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xuICBjb2xvcjogI2ZmZjtcbiAgcGFkZGluZzogMTBweCAyNXB4O1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBmb250LXNpemU6IDFlbTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiAxLjVzIGVhc2UtaW4tb3V0O1xufVxuXG4ubmV3cy1lbmQge1xuICBtYXJnaW4tdG9wOiA0MHB4O1xufVxuXG4ubmV3cy1lbmQgLmxlZnQtYmxvZy1oZWFkZXItdGl0bGUge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLm5ld3MtZW5kLXdyYXAge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIG1hcmdpbi1sZWZ0OiAtNy41cHg7XG4gIG1hcmdpbi1yaWdodDogLTcuNXB4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLm5ld3MtZW5kLXdyYXAtaXRlbSB7XG4gIHdpZHRoOiBjYWxjKDUwJSAtIDE1cHgpO1xufVxuXG4ubmV3cy1lbmQtd3JhcC1pdGVtLWxpbmsge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xufVxuXG4ubmV3cy1lbmQtd3JhcC1pdGVtLWxpbms6OmJlZm9yZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29udGVudDogJyc7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2l0aW9uOiAwLjVzIGVhc2UtaW4tb3V0O1xufVxuXG4ubmV3cy1lbmQtd3JhcC1pdGVtLWltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ubmV3cy1lbmQtd3JhcC1pdGVtLXRpdGxlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDIwcHg7XG4gIGxlZnQ6IDE1cHg7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4ubmV3cyAuYXNpZGUtYmxvZy1mb3JtIHtcbiAgdG9wOiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJvcmRlcjogbm9uZTtcbn1cblxuLm5ld3MgLmxlZnQtYmxvZyB7XG4gIG1hcmdpbi1yaWdodDogMzBweDtcbn1cblxuLm5ld3MgLnRoZW5rcy1ibG9nLXRvcC1uZXdzLWluZm8ge1xuICBsZWZ0OiBhdXRvO1xuICByaWdodDogMTBweDtcbn1cblxuLm5ld3MgLmNhcmQtaXRlbSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgcGFkZGluZzogMDtcbiAgbWF4LXdpZHRoOiAyODBweDtcbn1cblxuLm5ld3MgLmNhcmQtaXRlbS1pbWcgaW1nIHtcbiAgYm9yZGVyLXJhZGl1czogMTBweCAxMHB4IDAgMDtcbn1cblxuLm5ld3MgLmNhcmQtaXRlbS10aXRsZSB7XG4gIHBhZGRpbmc6IDAgMTBweDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDgwMHB4KSB7XG4gIC5idG4tbWFpbjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2JkMjQyYjtcbiAgICBjb2xvcjogI2ZmZjtcbiAgfVxuXG4gIC5idG4tb3BzOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmQyNDJiO1xuICAgIGNvbG9yOiAjZmZmO1xuICB9XG5cbiAgLmJ0bi1yZWQ6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgY29sb3I6ICNiZDI0MmI7XG4gIH1cblxuICAuYW5pbWF0ZS1saW5lOmhvdmVyOjphZnRlciB7XG4gICAgYW5pbWF0aW9uOiBidG5SZWQgNHMgaW5maW5pdGU7XG4gIH1cblxuICAubmV3cy1oZWFkZXItYXRyOmhvdmVyIHtcbiAgICBjb2xvcjogI2JkMjQyYjtcbiAgfVxuXG4gIC5uZXdzLWNvbnRlbnQgYTpob3ZlciB7XG4gICAgY29sb3I6ICNiZDI0MmI7XG4gIH1cblxuICAubmV3cy1jb250YWN0IGk6aG92ZXIge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbiAgfVxuXG4gIC5uZXdzLWNvbGJhazpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1zaXplOiAxMjAlIDEyMCU7XG4gIH1cblxuICAubmV3cy1jb2xiYWs6aG92ZXIgLm5ld3MtY29sYmFrLXRpdGxlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XG4gIH1cblxuICAubmV3cy1jb2xiYWs6aG92ZXIgLm5ld3MtY29sYmFrLXByZXYge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbiAgfVxuXG4gIC5uZXdzLWNvbGJhazpob3ZlciAubmV3cy1jb2xiYWstYnRuIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xNSk7XG4gICAgY29sb3I6ICMyYzJjMmM7XG4gIH1cblxuICAubmV3cy1lbmQtd3JhcC1pdGVtLWxpbms6aG92ZXI6OmJlZm9yZSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KSB7XG4gIC53cmFwcGVyIHtcbiAgICBwYWRkaW5nOiAwIDE1cHg7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTEwMHB4KSB7XG4gIC53cmFwcGVyIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gICAgcGFkZGluZy1yaWdodDogMTVweDtcbiAgfVxuXG4gIC53cmFwcGVyIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gICAgcGFkZGluZy1yaWdodDogMTVweDtcbiAgfVxuXG4gIC53cmFwcGVyLWZ1bGwge1xuICAgIHBhZGRpbmctbGVmdDogMTVweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDUwcHgpIHtcbiAgLm5ld3MtdG9wIHtcbiAgICBwYWRkaW5nOiAyMHB4IDEwcHg7XG4gIH1cblxuICAubmV3cyAubWFpbi1jb250ZW50LWJsb2cge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbiAgfVxuXG4gIC5uZXdzIC5hc2lkZS1ibG9nIHtcbiAgICBtYXgtd2lkdGg6IDIwMHB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5NTBweCkge1xuICBib2R5IHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk0MHB4KSB7XG4gIC5wb3BhcC1jb250ZW50IHtcbiAgICBwYWRkaW5nOiAxNXB4IDMwcHg7XG4gIH1cblxuICAucG9wYXAtY29udGVudC1jbG9zZSB7XG4gICAgcmlnaHQ6IDEwcHg7XG4gICAgdG9wOiAzcHg7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDgzMHB4KSB7XG4gIC50aXRsZS1wYWdlIHtcbiAgICBmb250LXNpemU6IDR2dztcbiAgfVxuXG4gIC50aXRsZS1wYWdlIHtcbiAgICBmb250LXNpemU6IDIuNWVtO1xuICB9XG5cbiAgLnByZXYtcGFnZSB7XG4gICAgZm9udC1zaXplOiAxLjRlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogODIwcHgpIHtcbiAgLm5ld3MtaGVhZGVyLWF0ci13cmFwIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB9XG5cbiAgLm5ld3MtaGVhZGVyLXRpdGxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB9XG5cbiAgLm5ld3MtaGVhZGVyLWRhdGEge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc4MHB4KSB7XG4gIC5uZXdzIC5oZWFkZXItYnRuIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIC5uZXdzIC5tYWluLWNvbnRlbnQtYmxvZyB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxuXG4gIC5uZXdzIC5hc2lkZS1ibG9nLWZvcm0ge1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgfVxuXG4gIC5uZXdzIC5jYXJkLWl0ZW0ge1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgfVxuXG4gIC5uZXdzIC5hc2lkZS1ibG9nIHtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDczMHB4KSB7XG4gIC5uZXdzLWhlYWRlci10aXRsZSB7XG4gICAgZm9udC1zaXplOiAxLjVlbTtcbiAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA2MzBweCkge1xuICAubmV3cy1lbmQtd3JhcC1pdGVtIHtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gMTVweCk7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU2MHB4KSB7XG4gIC5uZXdzIC53cmFwcGVyIHtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG5cbiAgLm5ld3MtY29sYmFrIHtcbiAgICBwYWRkaW5nOiAwIDE1cHg7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDUyMHB4KSB7XG4gIC5uZXdzLWNvbnRhY3QgaSB7XG4gICAgd2lkdGg6IDQ1JTtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0NjBweCkge1xuICAucG9wYXAtY29udGVudCB7XG4gICAgd2lkdGg6IDk1JTtcbiAgfVxuXG4gIC5uZXdzLWNvbnRhY3QgaSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzOTBweCkge1xuICAucG9wYXAtY29udGVudC1sYWJlbC13cmFwIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtaGVpZ2h0OiA3MDBweCkge1xuICAucG9wYXAtY29udGVudCB7XG4gICAgb3ZlcmZsb3c6IHNjcm9sbDtcbiAgfVxufSIsIkBjb2x1bW5zOiAxMjtcbkBhdG9tOiAoMTAwJSAvIEBjb2x1bW5zKTtcblxuQGJyZWFrX2xnOiAxMjAwcHg7XG5AYnJlYWtfbWQ6IDExMDBweDtcbkBicmVha19zbTogNzIwcHg7XG5AYnJlYWtfeHM6IDU3NnB4O1xuXG5Ab2Zmc2V0OiAxNXB4O1xuQG9mZnNldF9sZzogQG9mZnNldDtcbkBvZmZzZXRfbWQ6IEBvZmZzZXQ7XG5Ab2Zmc2V0X3NtOiBAb2Zmc2V0O1xuQG9mZnNldF94czogQG9mZnNldDtcblxuQG9mZnNldF9vbmVfc2lkZTogKEBvZmZzZXQgLyAyKTtcbkBvZmZzZXRfbGdfb25lX3NpZGU6IChAb2Zmc2V0X2xnIC8gMik7XG5Ab2Zmc2V0X21kX29uZV9zaWRlOiAoQG9mZnNldF9tZCAvIDIpO1xuQG9mZnNldF9zbV9vbmVfc2lkZTogKEBvZmZzZXRfc20gLyAyKTtcbkBvZmZzZXRfeHNfb25lX3NpZGU6IChAb2Zmc2V0X3hzIC8gMik7XG5cbkBmaWVsZHM6IDMwcHg7XG5AZmllbGRzX21kOiAxNXB4O1xuXG4ud3JhcHBlci1mdWxsKCl7XG4gICAgcGFkZGluZy1sZWZ0OiBAZmllbGRzO1xuICAgIHBhZGRpbmctcmlnaHQ6IEBmaWVsZHM7XG5cbiAgICAubWQtYmxvY2soe1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IEBmaWVsZHNfbWQ7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IEBmaWVsZHNfbWQ7XG4gICAgfSk7XG59XG5cbi5yb3ctb2Zmc2V0cygpe1xuICAgIG1hcmdpbi1sZWZ0OiAoQG9mZnNldF9vbmVfc2lkZSAqIC0xKTtcbiAgICBtYXJnaW4tcmlnaHQ6IChAb2Zmc2V0X29uZV9zaWRlICogLTEpO1xufVxuXG4uY29sLW9mZnNldHMoQHR5cGUpe1xuICAgIEB7dHlwZX0tbGVmdDogQG9mZnNldF9vbmVfc2lkZTtcbiAgICBAe3R5cGV9LXJpZ2h0OiBAb2Zmc2V0X29uZV9zaWRlO1xufVxuXG4ud3JhcHBlcigpe1xuICAgIG1heC13aWR0aDogMTE3MHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIC53cmFwcGVyLWZ1bGwoKTtcbn1cblxuLnJvdy1mbGV4KCl7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgLnJvdy1vZmZzZXRzKCk7XG59XG5cbi5yb3ctZmxvYXQoKXtcbiAgICAucm93LW9mZnNldHMoKTtcbiAgICAuY2xlYXJmaXgoKTtcbn1cblxuLnJvdy1pYigpe1xuICAgIC5yb3ctb2Zmc2V0cygpO1xufVxuXG4uY29sKCl7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gICAgLmNvbC1vZmZzZXRzKG1hcmdpbik7XG59XG5cbi5jb2wtZmxvYXQoKXtcbiAgICBmbG9hdDogbGVmdDtcbn1cblxuLmNvbC1pYigpe1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xufVxuXG4uY29sLXBhZGRpbmcoKXtcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gICAgLmNvbC1vZmZzZXRzKHBhZGRpbmcpO1xufVxuXG4uc2l6ZShAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgd2lkdGg6IH5cImNhbGMoQHt2YWx9IC0gQHtvZmZzZXR9KVwiO1xufVxuXG4uc2l6ZS1sZyhAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLmxnKHdpZHRoLCB+XCJjYWxjKEB7dmFsfSAtIEB7b2Zmc2V0X2xnfSlcIik7XG59XG5cbi5zaXplLW1kKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubWQod2lkdGgsIH5cImNhbGMoQHt2YWx9IC0gQHtvZmZzZXRfbWR9KVwiKTtcbn1cblxuLnNpemUtc20oQG4pe1xuICAgIEB2YWw6IDEwMCUgLyBAY29sdW1ucyAqIEBuO1xuICAgIC5zbSh3aWR0aCwgflwiY2FsYyhAe3ZhbH0gLSBAe29mZnNldF9zbX0pXCIpO1xufVxuXG4uc2l6ZS14cyhAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLnhzKHdpZHRoLCB+XCJjYWxjKEB7dmFsfSAtIEB7b2Zmc2V0X3hzfSlcIik7XG59XG5cbi5zaGlmdChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgbWFyZ2luLWxlZnQ6IH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfb25lX3NpZGV9KVwiO1xuICAgIG1hcmdpbi1yaWdodDogflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9vbmVfc2lkZX0pXCI7XG59XG5cbi5zaGlmdC1sZWZ0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICBtYXJnaW4tbGVmdDogflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9vbmVfc2lkZX0pXCI7XG59XG5cbi5zaGlmdC1yaWdodChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgbWFyZ2luLXJpZ2h0OiB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcbn1cblxuLnNoaWZ0LXBhZGRpbmcoQG4pe1xuICAgIEB2YWw6IDEwMCUgLyBAY29sdW1ucyAqIEBuO1xuICAgIHBhZGRpbmctbGVmdDogflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9vbmVfc2lkZX0pXCI7XG4gICAgcGFkZGluZy1yaWdodDogflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9vbmVfc2lkZX0pXCI7XG59XG5cbi5zaGlmdC1wYWRkaW5nLWxlZnQoQG4pe1xuICAgIEB2YWw6IDEwMCUgLyBAY29sdW1ucyAqIEBuO1xuICAgIHBhZGRpbmctbGVmdDogflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9vbmVfc2lkZX0pXCI7XG59XG5cbi5zaGlmdC1wYWRkaW5nLXJpZ2h0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICBwYWRkaW5nLXJpZ2h0OiB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcbn1cblxuLnNoaWZ0LWxnKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubGcobWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbGdfb25lX3NpZGV9KVwiKTtcbiAgICAubGcobWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X2xnX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC1sZy1sZWZ0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubGcobWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbGdfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LWxnLXJpZ2h0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubGcobWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X2xnX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC1sZy1wYWRkaW5nKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubGcocGFkZGluZy1sZWZ0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X2xnX29uZV9zaWRlfSlcIik7XG4gICAgLmxnKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbGdfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LWxnLXBhZGRpbmctbGVmdChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLmxnKHBhZGRpbmctbGVmdCwgflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9sZ19vbmVfc2lkZX0pXCIpO1xufVxuXG4uc2hpZnQtbGctcGFkZGluZy1yaWdodChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLmxnKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbGdfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LW1kKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubWQobWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbWRfb25lX3NpZGV9KVwiKTtcbiAgICAubWQobWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X21kX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC1tZC1sZWZ0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubWQobWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbWRfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LW1kLXJpZ2h0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubWQobWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X21kX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC1tZC1wYWRkaW5nKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubWQocGFkZGluZy1sZWZ0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X21kX29uZV9zaWRlfSlcIik7XG4gICAgLm1kKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbWRfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LW1kLXBhZGRpbmctbGVmdChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLm1kKHBhZGRpbmctbGVmdCwgflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9tZF9vbmVfc2lkZX0pXCIpO1xufVxuXG4uc2hpZnQtbWQtcGFkZGluZy1yaWdodChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLm1kKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbWRfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LXNtKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAuc20obWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfc21fb25lX3NpZGV9KVwiKTtcbiAgICAuc20obWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X3NtX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC1zbS1sZWZ0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAuc20obWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfc21fb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LXNtLXJpZ2h0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAuc20obWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X3NtX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC1zbS1wYWRkaW5nKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAuc20ocGFkZGluZy1sZWZ0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X3NtX29uZV9zaWRlfSlcIik7XG4gICAgLnNtKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfc21fb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LXNtLXBhZGRpbmctbGVmdChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLnNtKHBhZGRpbmctbGVmdCwgflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9zbV9vbmVfc2lkZX0pXCIpO1xufVxuXG4uc2hpZnQtc20tcGFkZGluZy1yaWdodChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLnNtKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfc21fb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LXhzKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAueHMobWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfeHNfb25lX3NpZGV9KVwiKTtcbiAgICAueHMobWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X3hzX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC14cy1sZWZ0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAueHMobWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfeHNfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LXhzLXJpZ2h0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAueHMobWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X3hzX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC14cy1wYWRkaW5nKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAueHMocGFkZGluZy1sZWZ0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X3hzX29uZV9zaWRlfSlcIik7XG4gICAgLnhzKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfeHNfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LXhzLXBhZGRpbmctbGVmdChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLnhzKHBhZGRpbmctbGVmdCwgflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF94c19vbmVfc2lkZX0pXCIpO1xufVxuXG4uc2hpZnQteHMtcGFkZGluZy1yaWdodChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLnhzKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfeHNfb25lX3NpZGV9KVwiKTtcbn1cblxuLmxnKEBuYW1lLCBAdmFsdWUpe1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XG4gICAgICAgIEB7bmFtZX06IEB2YWx1ZTtcbiAgICB9XG59XG5cbi5sZy1ibG9jayhAY29udGVudCl7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcbiAgICAgICAgQGNvbnRlbnQoKTtcbiAgICB9XG59XG5cbi5tZChAbmFtZSwgQHZhbHVlKXtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xuICAgICAgICBAe25hbWV9OiBAdmFsdWU7XG4gICAgfVxufVxuXG4ubWQtYmxvY2soQGNvbnRlbnQpe1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19tZCl7XG4gICAgICAgIEBjb250ZW50KCk7XG4gICAgfVxufVxuXG4uc20oQG5hbWUsIEB2YWx1ZSl7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3NtKXtcbiAgICAgICAgQHtuYW1lfTogQHZhbHVlO1xuICAgIH1cbn1cblxuLnNtLWJsb2NrKEBjb250ZW50KXtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfc20pe1xuICAgICAgICBAY29udGVudCgpO1xuICAgIH1cbn1cblxuLnhzKEBuYW1lLCBAdmFsdWUpe1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha194cyl7XG4gICAgICAgIEB7bmFtZX06IEB2YWx1ZTtcbiAgICB9XG59XG5cbi54cy1ibG9jayhAY29udGVudCl7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3hzKXtcbiAgICAgICAgQGNvbnRlbnQoKTtcbiAgICB9XG59XG5cbi5mcm9tKEBtaW5fd2lkdGgsIEBjb250ZW50KXtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiBAbWluX3dpZHRoKXtcbiAgICAgICAgQGNvbnRlbnQoKTtcbiAgICB9XG59XG5cbi50byhAbWF4X3dpZHRoLCBAY29udGVudCl7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQG1heF93aWR0aCl7XG4gICAgICAgIEBjb250ZW50KCk7XG4gICAgfVxufVxuXG4uZnJvbS10byhAbWluX3dpZHRoLCBAbWF4X3dpZHRoLCBAY29udGVudCl7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogQG1pbl93aWR0aCkgYW5kIChtYXgtd2lkdGg6IEBtYXhfd2lkdGgpe1xuICAgICAgICBAY29udGVudCgpO1xuICAgIH1cbn1cblxuLnUtcm93LWZsZXgoQG9mZnNldCl7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgbWFyZ2luLWxlZnQ6IChAb2Zmc2V0IC8gLTIpO1xuICAgIG1hcmdpbi1yaWdodDogKEBvZmZzZXQgLyAtMik7XG59XG5cbi51LWNvbChAb2Zmc2V0KXtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgICBtYXJnaW4tbGVmdDogKEBvZmZzZXQgLyAyKTtcbiAgICBtYXJnaW4tcmlnaHQ6IChAb2Zmc2V0IC8gMik7XG59XG5cbi51LXNpemUoQG4sIEBjb2x1bW5zLCBAb2Zmc2V0KXtcbiAgICB3aWR0aDogflwiY2FsYygxMDAlIC8gQHtjb2x1bW5zfSAqIEB7bn0gLSBAe29mZnNldH0pXCI7XG59XG5cbi5yZXNldCgpe1xuICAgIGJvZHksZGl2LGRsLGR0LGRkLHVsLGxpLGgxLGgyLGgzLGg0LGg1LGg2LHByZSxjb2RlLGZvcm0sZmllbGRzZXQsaW5wdXQsdGV4dGFyZWEscCxibG9ja3F1b3RlLHRoLHRke1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgfVxuICAgIHRhYmxle1xuICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgICAgICBib3JkZXItc3BhY2luZzogMDtcbiAgICB9XG4gICAgZmllbGRzZXQsaW1nLGFiYnJ7XG4gICAgICAgIGJvcmRlcjogMDtcbiAgICB9XG4gICAgYWRkcmVzcyxjYXB0aW9uLGNpdGUsY29kZSxkZm4sZW0sc3Ryb25nLHRoLHZhcntcbiAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIH1cbiAgICB1bCBsaXtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICB9XG4gICAgY2FwdGlvbix0aHtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICB9XG4gICAgaDEsaDIsaDMsaDQsaDUsaDZ7XG4gICAgICAgIGZvbnQtc2l6ZTogMTAwJTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICB9XG4gICAgc3Vwe1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC10b3A7XG4gICAgfVxuICAgIHN1YntcbiAgICAgICAgdmVydGljYWwtYWxpZ246IHRleHQtYm90dG9tO1xuICAgIH1cbiAgICBpbnB1dCx0ZXh0YXJlYSxzZWxlY3R7XG4gICAgICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgICAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xuICAgIH1cbiAgICBsZWdlbmR7XG4gICAgICAgIGNvbG9yOiAjMDAwO1xuICAgIH1cbiAgICBhcnRpY2xlLGFzaWRlLGRldGFpbHMsZmlnY2FwdGlvbixmaWd1cmUsZm9vdGVyLGhlYWRlcixoZ3JvdXAsbWVudSxuYXYsc2VjdGlvbixtYWlue1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gICAgaW1ne1xuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogYXV0bztcbiAgICB9XG59XG5cbi5kZWJ1ZyhAYmFja2dyb3VuZCwgQG91dGxpbmUpe1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIFxuICAgID4gZGl2e1xuICAgICAgICBoZWlnaHQ6IGluaGVyaXQ7XG4gICAgICAgIC53cmFwcGVyKCk7XG4gICAgICAgIFxuICAgICAgICA+IGRpdntcbiAgICAgICAgICAgIGhlaWdodDogaW5oZXJpdDtcbiAgICAgICAgICAgIC5yb3ctZmxleCgpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICA+IGRpdntcbiAgICAgICAgICAgICAgICAuY29sKCk7XG4gICAgICAgICAgICAgICAgLnNpemUoMSk7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiBpbmhlcml0O1xuICAgICAgICAgICAgICAgIG91dGxpbmU6IEBvdXRsaW5lO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IEBiYWNrZ3JvdW5kO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4uY2xlYXJmaXgoKXtcbiAgICAmOjphZnRlcntcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGNsZWFyOiBib3RoO1xuICAgIH1cbn0iLCJAaW1wb3J0ICdzbWFydC1ncmlkJztcclxuXHJcbkBtYWluOiAjYmQyNDJiO1xyXG5Ad2hpdGU6ICNmZmY7XHJcbkBtYWluVGV4dDogIzJjMmMyYztcclxuXHJcblxyXG5AcGhvbmU6IDgwMHB4O1xyXG5AdGltZTogMC41cyBlYXNlLWluLW91dDtcclxuLnJlc2V0KCk7XHJcbip7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG4ud3JhcHBlcntcclxuICAgIC53cmFwcGVyKCk7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KSB7XHJcbiAgICAgICAgcGFkZGluZzogMCAxNXB4O1xyXG4gICAgfVxyXG59XHJcbi53cmFwcGVyLWZ1bGx7XHJcbiAgICAud3JhcHBlci1mdWxsKCk7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5tYWlue1xyXG4gICAgbWFyZ2luLXRvcDogNjBweDtcclxufVxyXG5ib2R5e1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nICwgXCJGdXR1cmEgUFRcIiA7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTUwcHgpIHtcclxuICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi50aXRsZS1wYWdle1xyXG4gICAgZm9udC1zaXplOiAyLjgxMjVlbTtcclxuICAgIGNvbG9yOiBAd2hpdGU7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuMmVtO1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgIGxldHRlci1zcGFjaW5nOiA2cHg7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogODMwcHgpIHtcclxuICAgICAgICBmb250LXNpemU6IDR2dztcclxuICAgICB9XHJcbiAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDgzMHB4KSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAyLjVlbTtcclxuICAgICB9XHJcbn1cclxuLnByZXYtcGFnZXtcclxuICAgIGNvbG9yOiBAd2hpdGU7XHJcbiAgICBmb250LXNpemU6IDEuNjc1ZW07XHJcbiAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWF4LXdpZHRoOiAxMDAwcHg7XHJcbiAgICBtYXJnaW46IDMwcHggYXV0byAwIGF1dG87XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogODMwcHgpIHtcclxuICAgICAgICBmb250LXNpemU6IDEuNGVtO1xyXG4gICAgIH1cclxufVxyXG4uZncxMDB7XHJcbiAgICBmb250LXdlaWdodDogMTAwO1xyXG59XHJcbi5yZWR7XHJcbiAgICBjb2xvcjogI2JkMjQyYjtcclxufVxyXG4ud2hpdGV7XHJcbiAgICBjb2xvcjogQHdoaXRlXHJcbn1cclxuLmJvdC1saW5le1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgJjo6YWZ0ZXJ7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIHdpZHRoOiA3MHB4O1xyXG4gICAgICAgIGhlaWdodDogNHB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IEBtYWluO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgfVxyXG4gICAgICY6OmJlZm9yZXtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMXB4O1xyXG4gICAgICAgICAgICBib3R0b206IDJweDtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRlbihAbWFpblRleHQgLCA1MCUpO1xyXG4gICAgICAgIH1cclxufVxyXG4udGhlbmtzLWJsb2ctdG9wLW5ld3MtaW5mb3tcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGNvbG9yOiBAd2hpdGU7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgdG9wOiAyNXB4O1xyXG4gICAgbGVmdDogMjVweDtcclxuZm9udC1zaXplOiAxMXB4O1xyXG5iYWNrZ3JvdW5kLWNvbG9yOiBAbWFpbjtcclxuZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5wYWRkaW5nOiA1cHggMTBweDtcclxudGV4dC1hbGlnbjogY2VudGVyO1xyXG5ib3JkZXItcmFkaXVzOiA1cHg7XHJcbnotaW5kZXg6IDIwO1xyXG59XHJcbi5idG4tbWFpbntcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgIEBtYWluO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4IDVweCA1cHggNXB4O1xyXG4gICAgcGFkZGluZzogMTJweCAyNHB4O1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiBcclxuICAgIHRyYW5zaXRpb246IEB0aW1lO1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IEBwaG9uZSkge1xyXG4gICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IEBtYWluO1xyXG4gICAgICAgICAgICBjb2xvcjogQHdoaXRlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4uYnRuLW9wc3tcclxuICAgIGJhY2tncm91bmQ6IG5vbmU7XHJcbiAgICBjb2xvcjogQG1haW47XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogQHBob25lKSB7XHJcbiAgICAgICAgJjpob3ZlcntcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogQG1haW47XHJcbiAgICAgICAgICAgIGNvbG9yOiBAd2hpdGU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbi5idG4tcmVke1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogQG1haW47XHJcbiAgICBjb2xvcjogQHdoaXRlO1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IEBwaG9uZSkge1xyXG4gICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IG5vbmU7XHJcbiAgICAgICAgICAgIGNvbG9yOiBAbWFpbjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5saW5lLWdyZXlcclxuXHJcblxyXG4uYm90LWdyZXl7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogNTBweDtcclxuICAgICY6OmFmdGVye1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgIGhlaWdodDogMXB4O1xyXG4gICAgICAgIGxlZnQ6IDUwJTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcbiAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTIyLDEyMiwxMjIsMC41KTtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbi5tYWluLXdyYXB7XHJcbiBkaXNwbGF5OiBub25lO1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHRvcDogMDtcclxuICAgIHdpZHRoOiAxMDB2dztcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsMC41KTtcclxuICAgIHotaW5kZXg6IDkwMDtcclxufVxyXG4ucG9wYXAtY29udGVudHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlICwgLTUwJSk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBAd2hpdGU7XHJcbiAgICBtYXgtd2lkdGg6IDYwMHB4O1xyXG4gICAgd2lkdGg6IDgwJTtcclxuICAgIHotaW5kZXg6IDk1MDtcclxuICAgIHBhZGRpbmc6IDYwcHggODBweDtcclxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMTBweCAwcHggcmdiYSgwLDAsMCwwLjUpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTVweCAxNXB4IDE1cHggMTVweDtcclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOjk0MHB4KSB7XHJcbiAgICAgICAgcGFkZGluZzogMTVweCAzMHB4O1xyXG4gICAgfVxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6NDYwcHgpIHtcclxuICAgICAgICB3aWR0aDogOTUlO1xyXG4gICAgfVxyXG4gICAgQG1lZGlhIChtYXgtaGVpZ2h0OjcwMHB4KSB7XHJcbiAgICAgICAgb3ZlcmZsb3c6IHNjcm9sbDtcclxuICAgIH1cclxuICAgICYtZm9ybXtcclxuICAgICAgICBtYXgtd2lkdGg6IDU1MHB4O1xyXG4gICAgfVxyXG4gICAgJi10aXRsZXtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBmb250LXNpemU6IDEuODc1ZW07XHJcbiAgICAgICAgY29sb3I6IEBtYWluVGV4dDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS41O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgIH1cclxuICAgICYtdGV4dHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBjb2xvcjogQG1haW5UZXh0O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMWVtO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDQwcHg7XHJcbiAgICB9XHJcbiAgICAmLWxhYmVse1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIkZ1dHVyYSBQVFwiLCBSb2JvdG87XHJcbiAgICAgICAgY29sb3I6IEBtYWluVGV4dDtcclxuICAgICAgICBmb250LXNpemU6IDEuMTI1ZW07XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICAgICAgJi13cmFwe1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDozOTBweCl7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAucG9wYXAtY29udGVudC1sYWJlbHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaW5wdXRbdHlwZT1cImNoZWNrYm94XCJde1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBsYWJlbHtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMzBweDtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMjBweDtcclxuICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICAgICAgICAgICY6OmFmdGVye1xyXG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTJweDtcclxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEycHg7XHJcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgICAgICAgICB0b3A6IDUwJTtcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIEBtYWluVGV4dDtcclxuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBAdGltZTtcclxuICAgICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMTtcclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgIGNvbG9yOiBAd2hpdGU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdOmNoZWNrZWQgKyBsYWJlbHtcclxuICAgICAgICAgICAgICAgICY6OmFmdGVye1xyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IEBtYWluO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICfinJQnO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi1pbnB1dHtcclxuICAgICAgICBmb250LWZhbWlseTogJ1JvYm90byc7XHJcbiAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIHBhZGRpbmc6IDEwcHggMTVweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIEBtYWluVGV4dDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgfVxyXG4gICAgJi1zdWJtaXR7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogQG1haW47XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIGNvbG9yOiBAd2hpdGU7XHJcbiAgICAgICAgcGFkZGluZzogMTVweCAwO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgfVxyXG4gICAgJi1lbmR7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMC43NWVtO1xyXG4gICAgICAgIGNvbG9yOiBAbWFpblRleHQ7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgIH1cclxufVxyXG4ucG9wYXAtY29udGVudC1jbG9zZXtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHJpZ2h0OiAzMHB4O1xyXG4gICAgdG9wOiAzMHB4O1xyXG4gICAgei1pbmRleDogOTkwO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgaGVpZ2h0OiAyMnB4O1xyXG4gICAgcGFkZGluZy10b3A6IDExcHg7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDo5NDBweCkge1xyXG4gICAgICAgIHJpZ2h0OiAxMHB4O1xyXG4gICAgICAgIHRvcDogM3B4O1xyXG4gICAgfVxyXG4gICAgJjpob3ZlcntcclxuICAgICAgLnBvcGFwLWNvbnRlbnQtY2xvc2UtbGluZXtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBAbWFpbjtcclxuICAgICAgICAmOjphZnRlcntcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogQG1haW47XHJcbiAgICAgICAgfVxyXG4gICAgICB9ICBcclxuICAgIH1cclxuICAgICYtbGluZXtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgd2lkdGg6IDE3cHg7XHJcbiAgICAgICAgaGVpZ2h0OiA0cHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogQG1haW5UZXh0O1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuICAgICAgICB0cmFuc2l0aW9uOiBAdGltZTtcclxuICAgICAgICAmOjphZnRlcntcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxN3B4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDRweDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogQG1haW5UZXh0O1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBAdGltZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuLmxpbmUtZ3JleXtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHBhZGRpbmctYm90dG9tOiA4MHB4O1xyXG4gICAgJjo6YWZ0ZXJ7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICAgICAgaGVpZ2h0OiAxcHg7XHJcbiAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcclxuICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0NCw0NCw0NCwuNSk7XHJcbiAgICB9XHJcbn1cclxuLmZvb3Rlci12aWRlby10aXRsZS10aW1le1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNDBweDtcclxufVxyXG4uYW5pbWF0ZS1saW5le1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICY6OmFmdGVye1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICB3aWR0aDogMjBweDtcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbiAgICAgICAgaGVpZ2h0OiAyNTAlO1xyXG4gICAgICAgIGxlZnQ6IC0yMCU7XHJcbiAgICAgICAgdG9wOiAtMzBweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LDAuNSk7XHJcbiAgICB9XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IEBwaG9uZSkge1xyXG4gICAgICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICAgICAgJjo6YWZ0ZXJ7XHJcbiAgICAgICAgICAgICAgICAgICAgYW5pbWF0aW9uOiBidG5SZWQgNHMgaW5maW5pdGU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbn1cclxuLmhlYWRlci1hbmltYXRle1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgJi1pdGVte1xyXG4gICAgICAgZGlzcGxheTogbm9uZTsgIFxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuQGtleWZyYW1lcyBidG5SZWQge1xyXG4gICAgMCUge1xyXG4gICAgICAgIGxlZnQ6IC0zMCU7XHJcbiAgICB9XHJcbiAgICAxMDAlIHtcclxuICAgICAgICBsZWZ0OiAxNTAlO1xyXG4gICAgfVxyXG59IiwiQGltcG9ydCAnY29uc3QubGVzcyc7XHJcblxyXG4ubmV3cy13cmFwcGVyIHtcclxuICAgIC5wYWdlX3ByZXZpZXcge1xyXG4gICAgICAgIGhlaWdodDogNTAwcHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5uZXdzLXRvcCB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB6LWluZGV4OiAxMDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBAd2hpdGU7XHJcbiAgICBwYWRkaW5nOiA2MHB4O1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDUwcHgpIHtcclxuICAgICAgICBwYWRkaW5nOiAyMHB4IDEwcHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5uZXdzIHtcclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1NjBweCkge1xyXG4gICAgICAgIC53cmFwcGVyIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5uZXdzLWhlYWRlciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHJcbiAgICAmLWF0ciB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIGNvbG9yOiBAbWFpblRleHQ7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDMuM3B4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAxMDA7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIHRyYW5zaXRpb246IEB0aW1lO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IEBwaG9uZSkge1xyXG4gICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiBAbWFpbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi13cmFwIHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNDVweDtcclxuICAgICAgICAgICAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogODIwcHgpIHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtdGl0bGUge1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgY29sb3I6IEBtYWluVGV4dDtcclxuICAgICAgICBmb250LXNpemU6IDIuMThlbTtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA2NXB4O1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3MzBweCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuNWVtO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogODIwcHgpIHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi1kYXRhIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgbGlnaHRlbihAbWFpblRleHQgLCA1MCUpO1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBsaWdodGVuKEBtYWluVGV4dCAsIDUwJSk7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIHBhZGRpbmc6IDE1cHggMDtcclxuICAgICAgICBmb250LXdlaWdodDogMTAwO1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogNXB4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTdweDtcclxuICAgICAgICBjb2xvcjogQG1haW5UZXh0O1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDY1cHg7XHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDgyMHB4KSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuLm5ld3MtY29udGVudCB7XHJcbiAgICBjb2xvcjogQG1haW5UZXh0O1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGxpbmUtaGVpZ2h0OiAyZW07XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcblxyXG4gICAgYSB7XHJcbiAgICAgICAgY29sb3I6ICM0MTY5ZTE7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogQHRpbWU7XHJcblxyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiBAcGhvbmUpIHtcclxuICAgICAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogQG1haW47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb2wsXHJcbiAgICB1bCB7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiA0OHB4O1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDI1cHg7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgIH1cclxuXHJcbiAgICB1bCBsaSB7XHJcbiAgICAgICAgbGlzdC1zdHlsZTogZGlzYztcclxuICAgIH1cclxuXHJcbiAgICBwIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyNXB4O1xyXG4gICAgfVxyXG5cclxuICAgIGltZyB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjVweDtcclxuICAgIH1cclxuXHJcbiAgICBoMixcclxuICAgIGgzLFxyXG4gICAgaDQge1xyXG4gICAgICAgIGNvbG9yOiAjODA4Mjg1O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRwdDtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbi5uZXdzLWNvbnRhY3Qge1xyXG4gICAgbWFyZ2luLXRvcDogNjBweDtcclxuXHJcbiAgICAucHJldi1wYWdlIHtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjNlbTtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgfVxyXG5cclxuICAgIGkge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB3aWR0aDogMTA1cHg7XHJcbiAgICAgICAgaGVpZ2h0OiA0NXB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiA0NXB4O1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgZm9udC1zaXplOiAyMnB4O1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMjBweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgICAgIHRyYW5zaXRpb246IEB0aW1lO1xyXG5cclxuICAgICAgICAmOmxhc3Qtb2YtdHlwZSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiBAcGhvbmUpIHtcclxuICAgICAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOjUyMHB4KSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA0NSU7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDo0NjBweCkge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLWNvIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAyNXB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4ubmV3cy1jb2xiYWsge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBtYXJnaW4tdG9wOiAyNXB4O1xyXG4gICAgbWluLWhlaWdodDogMjgwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDEwMCUgMTAwJTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDY4MHB4O1xyXG4gICAgcGFkZGluZzogMCA2MHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgY29sb3I6IEB3aGl0ZTtcclxuICAgIHRyYW5zaXRpb246IDEuNXMgZWFzZS1pbi1vdXQ7XHJcblxyXG4gICAgJjo6YmVmb3JlIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiBAcGhvbmUpIHtcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOiAxMjAlIDEyMCU7XHJcblxyXG4gICAgICAgICAgICAubmV3cy1jb2xiYWstdGl0bGUge1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAubmV3cy1jb2xiYWstcHJldiB7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC5uZXdzLWNvbGJhay1idG4ge1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogQHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjE1KTtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiBAbWFpblRleHQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi10aXRsZSB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS40M2VtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgICAgICB0cmFuc2l0aW9uOiAxcyBlYXNlLWluLW91dDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcblxyXG4gICAgJi1wcmV2IHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjEzZW07XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICB0cmFuc2l0aW9uOiAxLjNzIGVhc2UtaW4tb3V0O1xyXG4gICAgfVxyXG5cclxuICAgICYtYnRuIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBAd2hpdGU7XHJcbiAgICAgICAgY29sb3I6IEB3aGl0ZTtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4IDI1cHg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMjBweDtcclxuICAgICAgICBmb250LXNpemU6IDFlbTtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogMS41cyBlYXNlLWluLW91dDtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDo1NjBweCkge1xyXG4gICAgICAgIHBhZGRpbmc6IDAgMTVweDtcclxuICAgIH1cclxufVxyXG5cclxuLm5ld3MtZW5kIHtcclxuICAgIG1hcmdpbi10b3A6IDQwcHg7XHJcblxyXG4gICAgLmxlZnQtYmxvZy1oZWFkZXItdGl0bGUge1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xyXG4gICAgfVxyXG5cclxuICAgICYtd3JhcCB7XHJcbiAgICAgICAgLnJvdy1mbGV4KCk7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgJi1pdGVtIHtcclxuICAgICAgICAgICAgLnNpemUoNik7XHJcbiAgICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOjYzMHB4KSB7XHJcbiAgICAgICAgICAgICAgICAuc2l6ZSgxMik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJi1saW5rIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgQHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgLjUpO1xyXG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogQHRpbWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDpAcGhvbmUpIHtcclxuICAgICAgICAgICAgICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAmOjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICYtaW1nIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmLXRpdGxlIHtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgIGJvdHRvbTogMjBweDtcclxuICAgICAgICAgICAgICAgIGxlZnQ6IDE1cHg7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogQHdoaXRlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbi5uZXdze1xyXG4gICAgLmhlYWRlci1idG57XHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDc4MHB4KXsgICBcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcblxyXG5cclxuICAgIFxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwNTBweCl7ICAgXHJcbiAgICAgICAgLm1haW4tY29udGVudC1ibG9nIHtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgICB9fVxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc4MHB4KXsgICBcclxuICAgICAgICAubWFpbi1jb250ZW50LWJsb2cge1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICB9fVxyXG4gICAgLmFzaWRlLWJsb2ctZm9ybXtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNzgwcHgpeyAgIFxyXG4gICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLmxlZnQtYmxvZ3tcclxuICAgICAgIG1hcmdpbi1yaWdodDogMzBweDtcclxuICAgIH1cclxuICAgIC50aGVua3MtYmxvZy10b3AtbmV3cy1pbmZve1xyXG4gICAgICAgIGxlZnQ6IGF1dG87XHJcbiAgICAgICAgcmlnaHQ6IDEwcHg7XHJcbiAgICB9XHJcbiAgICAuY2FyZC1pdGVte1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAyODBweDtcclxuICAgICAgICAmLWltZ3tcclxuICAgICAgICAgICAgaW1ne1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweCAxMHB4IDAgMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmLXRpdGxle1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAwIDEwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3ODBweCl7ICAgXHJcbiAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAuYXNpZGUtYmxvZ3tcclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTA1MHB4KXsgXHJcbiAgICAgICAgICAgIG1heC13aWR0aDogMjAwcHg7XHJcbiAgICAgICAgIH1cclxuICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDc4MHB4KXsgICBcclxuICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgICAgfVxyXG4gICAgfVxyXG59Il19 */
