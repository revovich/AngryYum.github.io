blockquote,body,code,dd,div,dl,dt,fieldset,form,h1,h2,h3,h4,h5,h6,input,li,p,pre,td,textarea,th,ul{margin:0;padding:0}table{border-collapse:collapse;border-spacing:0}abbr,fieldset,img{border:0}address,caption,cite,code,dfn,em,strong,th,var{font-style:normal;font-weight:400}ul li{list-style:none}caption,th{text-align:left}h1,h2,h3,h4,h5,h6{font-size:100%;font-weight:400}sup{vertical-align:text-top}sub{vertical-align:text-bottom}input,select,textarea{font-family:inherit;font-size:inherit;font-weight:inherit}legend{color:#000}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}img{max-width:100%;height:auto}*{box-sizing:border-box;outline:0;text-decoration:none}.wrapper{max-width:1170px;margin:0 auto;padding-left:30px;padding-right:30px;width:100%}.wrapper-full{padding-left:30px;padding-right:30px;width:100%}main{margin-top:60px}body{font-size:16px;font-family:Roboto,"Futura PT"}.title-page{font-size:2.8125em;color:#fff;text-transform:uppercase;text-align:center;line-height:1.2em;font-weight:600;letter-spacing:6px}.prev-page{color:#fff;font-size:1.675em;font-weight:300;text-align:center;max-width:1000px;margin:30px auto 0}.fw100{font-weight:100}.red{color:#bd242b}.white{color:#fff}.bot-line{position:relative;padding-bottom:10px;margin-bottom:15px}.bot-line::after{position:absolute;content:'';width:70px;height:4px;background-color:#bd242b;left:0;bottom:0}.bot-line::before{position:absolute;content:'';width:100%;height:1px;bottom:2px;left:0;background-color:#acacac}.thenks-blog-top-news-info{position:absolute;color:#fff;text-transform:uppercase;top:25px;left:25px;font-size:11px;background-color:#bd242b;display:inline-block;padding:5px 10px;text-align:center;border-radius:5px;z-index:20}.btn-main{display:block;border:2px solid #bd242b;border-radius:5px;padding:12px 24px;text-transform:uppercase;margin:0 auto;cursor:pointer;font-weight:700;-webkit-transition:.5s ease-in-out;transition:.5s ease-in-out}.btn-ops{background:0 0;color:#bd242b}.btn-red{background-color:#bd242b;color:#fff}.line-grey .bot-grey{position:relative;padding-bottom:50px}.line-grey .bot-grey::after{position:absolute;content:'';width:90%;height:1px;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);bottom:0;background-color:rgba(122,122,122,.5)}.main-wrap{display:none;position:fixed;left:0;top:0;width:100vw;height:100%;background-color:rgba(0,0,0,.5);z-index:900}.popap-content{font-family:Roboto;display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;position:fixed;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);background-color:#fff;max-width:600px;width:80%;z-index:950;padding:60px 80px;box-shadow:0 0 10px 0 rgba(0,0,0,.5);border-radius:15px}.popap-content-form{max-width:550px}.popap-content-title{text-align:center;text-transform:uppercase;font-size:1.875em;color:#2c2c2c;line-height:1.5;font-weight:600;margin-bottom:20px}.popap-content-text{display:block;font-weight:300;text-align:center;color:#2c2c2c;font-size:1em;margin-bottom:40px}.popap-content-label{font-family:"Futura PT",Roboto;color:#2c2c2c;font-size:1.125em;display:block;margin-bottom:5px;font-weight:300}.popap-content-label-wrap{margin-bottom:20px}.popap-content-label-wrap .popap-content-label{margin-bottom:15px}.popap-content-label-wrap input[type=checkbox]{display:none}.popap-content-label-wrap label{position:relative;margin-right:30px;padding-left:20px;cursor:pointer}.popap-content-label-wrap label::after{position:absolute;content:'';width:12px;height:12px;left:0;top:50%;border-radius:3px;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);border:1px solid #2c2c2c;-webkit-transition:.5s ease-in-out;transition:.5s ease-in-out;line-height:1;font-size:13px;color:#fff}.popap-content-label-wrap input[type=checkbox]:checked+label::after{background-color:#bd242b;content:'âœ”'}.popap-content-input{font-family:Roboto;font-weight:300;display:block;width:100%;padding:10px 15px;border-radius:10px;border:1px solid #2c2c2c;margin-bottom:15px}.popap-content-submit{width:100%;background-color:#bd242b;border:none;color:#fff;padding:15px 0;border-radius:15px;cursor:pointer}.popap-content-end{display:block;text-align:center;font-size:.75em;color:#2c2c2c;margin-top:10px}.popap-content-close{position:absolute;right:30px;top:30px;z-index:990;cursor:pointer;height:22px;padding-top:11px}.popap-content-close:hover .popap-content-close-line,.popap-content-close:hover .popap-content-close-line::after{background-color:#bd242b}.popap-content-close-line{position:relative;display:block;width:17px;height:4px;background-color:#2c2c2c;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg);-webkit-transition:.5s ease-in-out;transition:.5s ease-in-out}.popap-content-close-line::after{position:absolute;content:'';display:block;width:17px;height:4px;background-color:#2c2c2c;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);-webkit-transition:.5s ease-in-out;transition:.5s ease-in-out}.line-grey{position:relative;padding-bottom:80px}.line-grey::after{position:absolute;content:'';width:90%;height:1px;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);bottom:0;background-color:rgba(44,44,44,.5)}.footer-video-title-time{margin-bottom:40px}.animate-line{position:relative;overflow:hidden}.animate-line::after{position:absolute;content:'';width:20px;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg);height:250%;left:-20%;top:-30px;background-color:rgba(255,255,255,.5)}.header-animate{position:relative}.header-animate-item{display:none}@-webkit-keyframes btnRed{0%{left:-30%}100%{left:150%}}@keyframes btnRed{0%{left:-30%}100%{left:150%}}@media (min-width:800px){.btn-main:hover,.btn-ops:hover{background-color:#bd242b;color:#fff}.btn-red:hover{background:0 0;color:#bd242b}.animate-line:hover::after{-webkit-animation:4s infinite btnRed;animation:4s infinite btnRed}}@media (max-width:1200px){.wrapper{padding:0 15px}}@media screen and (max-width:1100px){.wrapper,.wrapper-full{padding-left:15px;padding-right:15px}}@media (max-width:950px){body{font-size:14px}}@media (max-width:940px){.popap-content{padding:15px 30px}.popap-content-close{right:10px;top:3px}}@media (max-width:830px){.title-page{font-size:2.5em}.prev-page{font-size:1.4em}}@media (max-width:460px){.popap-content{width:95%}}@media (max-width:390px){.popap-content-label-wrap{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}}@media (max-height:700px){.popap-content{overflow:scroll}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnN0LmNzcyIsInNtYXJ0LWdyaWQubGVzcyIsImNvbnN0Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0JBLFdDOFVJLEtEcFZKLEtBVkEsR0FIQSxJQUNBLEdBQ0EsR0FhQSxTQURBLEtBUkEsR0FDQSxHQUNBLEdBQ0EsR0FDQSxHQUNBLEdBS0EsTUFYQSxHQWFBLEVBTkEsSUFTQSxHQUpBLFNBR0EsR0FoQkEsR0M4VlEsT0FBQSxFQUNBLFFBQUEsRUR6VVIsTUM2VVEsZ0JBQUEsU0QzVU4sZUFBQSxFQUtGLEtDd1VpQixTRHpVakIsSUM0VUksT0FBQSxFQUFxQixRRHRVekIsUUFDQSxLQUNBLEtBQ0EsSUFDQSxHQUNBLE9BQ0EsR0FDQSxJQ21VTyxXQUFBLE9BQ0MsWUFBQSxJQUVJLE1BQ0osV0FBQSxLQUVELFFEL1RQLEdDK1RhLFdBQUEsS0QzVGIsR0FDQSxHQUNBLEdBQ0EsR0FDQSxHQUNBLEdDNlRJLFVBQUEsS0FDSSxZQUFBLElBRUUsSUFBUyxlQUFBLFNEdlRuQixJQUNFLGVBQUEsWUFHRixNQUVBLE9BREEsU0MwVGtCLFlBQUEsUUFBUSxVQUFBLFFBQVcsWUFBQSxRQUFxQixPQUFPLE1BQUEsS0FBaUIsUUQ5U2xGLE1BQ0EsUUFDQSxXQUNBLE9BQ0EsT0FDQSxPQUNBLE9BSUEsS0FIQSxLQUNBLElBQ0EsUUVyRkEsUUFBQSxNRjBGQSxJQ2hGSSxVQUFBLEtDRkEsT0FBQSxLRnVGSixFQUNFLFdBQUEsV0FDQSxRQUFBLEVBQ0EsZ0JBQUEsS0FHRixTQUNFLFVBQUEsT0FDQSxPQUFBLEVBQUEsS0FDQSxhQUFBLEtBQ0EsY0FBQSxLRXZHRSxNQUFBLEtGMkdKLGNBQ0UsYUFBQSxLRXhHRixjQUFBLEtER0ksTUFBQSxLRDBHSixLQzhKSSxXQUFBLEtEMUpKLEtBQ0UsVUFBQSxLQUNBLFlBQUEsTUFBQSxDQUFBLFlBR0YsWUUvR0EsVUFBQSxTQUNJLE1BQUEsS0FDQSxlQUFBLFVGaUhGLFdBQUEsT0VoSEUsWUFBQSxNQUFBLFlBQUEs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LGtCRXRIUSxHQUNBLEtBQUEsS0YwSE4sS0VySEYsS0FBQSxNRjBIQSx5QkVySEksZ0JBSUksZUZtSEosaUJBQUEsUUV0SEEsTUFBQSxLQVFJLGVGd0hKLGVFdEhJLE1BQUEsUUYwSE4sMkJBQ0Usa0JBQUEsR0FBQSxTQUFBLE9BQUEsVUFBQSxHQUFBLFNBQUEsUUVqSEEsMEJBQ0csU0ZzSEgsUUFBQSxFQUFBLE1BSUoscUNFakhJLFNGNEhGLGNBSkUsYUFBQSxLQUNBLGNBQUEsTUFTSix5QkFDRSxLQUNFLFVBQUEsTUFJSix5QkFDRSxlQUNFLFFBQUEsS0FBQSxLQUdGLHFCQUNFLE1BQUEsS0FDQSxJQUFBLEtBSUoseUJBQ0UsWUFLRSxVQUFBLE1BR0YsV0FDRSxVQUFBLE9BSUoseUJBQ0UsZUFDRSxNQUFBLEtBSUoseUJBQ0UsMEJBQ0UsUUFBQSxZQUFBLFFBQUEsS0FDQSxtQkFBQSxTQUFBLHNCQUFBLE9BQUEsZUFBQSxRQUlKLDBCQUNFLGVBQ0UsU0FBQSIsImZpbGUiOiJjb25zdC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5LFxuZGl2LFxuZGwsXG5kdCxcbmRkLFxudWwsXG5saSxcbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNixcbnByZSxcbmNvZGUsXG5mb3JtLFxuZmllbGRzZXQsXG5pbnB1dCxcbnRleHRhcmVhLFxucCxcbmJsb2NrcXVvdGUsXG50aCxcbnRkIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG5maWVsZHNldCxcbmltZyxcbmFiYnIge1xuICBib3JkZXI6IDA7XG59XG5cbmFkZHJlc3MsXG5jYXB0aW9uLFxuY2l0ZSxcbmNvZGUsXG5kZm4sXG5lbSxcbnN0cm9uZyxcbnRoLFxudmFyIHtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuXG51bCBsaSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmNhcHRpb24sXG50aCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbn1cblxuc3VwIHtcbiAgdmVydGljYWwtYWxpZ246IHRleHQtdG9wO1xufVxuXG5zdWIge1xuICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC1ib3R0b207XG59XG5cbmlucHV0LFxudGV4dGFyZWEsXG5zZWxlY3Qge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxubGVnZW5kIHtcbiAgY29sb3I6ICMwMDA7XG59XG5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbmltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4qIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgb3V0bGluZTogbm9uZTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4ud3JhcHBlciB7XG4gIG1heC13aWR0aDogMTE3MHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAzMHB4O1xuICB3aWR0aDogMTAwJTtcbn1cblxuLndyYXBwZXItZnVsbCB7XG4gIHBhZGRpbmctbGVmdDogMzBweDtcbiAgcGFkZGluZy1yaWdodDogMzBweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbm1haW4ge1xuICBtYXJnaW4tdG9wOiA2MHB4O1xufVxuXG5ib2R5IHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LWZhbWlseTogJ1JvYm90bycsIFwiRnV0dXJhIFBUXCI7XG59XG5cbi50aXRsZS1wYWdlIHtcbiAgZm9udC1zaXplOiAyLjgxMjVlbTtcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbGluZS1oZWlnaHQ6IDEuMmVtO1xuICBmb250LXdlaWdodDogNjAwO1xuICBsZXR0ZXItc3BhY2luZzogNnB4O1xufVxuXG4ucHJldi1wYWdlIHtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtc2l6ZTogMS42NzVlbTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXgtd2lkdGg6IDEwMDBweDtcbiAgbWFyZ2luOiAzMHB4IGF1dG8gMCBhdXRvO1xufVxuXG4uZncxMDAge1xuICBmb250LXdlaWdodDogMTAwO1xufVxuXG4ucmVkIHtcbiAgY29sb3I6ICNiZDI0MmI7XG59XG5cbi53aGl0ZSB7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uYm90LWxpbmUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xufVxuXG4uYm90LWxpbmU6OmFmdGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjb250ZW50OiAnJztcbiAgd2lkdGg6IDcwcHg7XG4gIGhlaWdodDogNHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmQyNDJiO1xuICBsZWZ0OiAwO1xuICBib3R0b206IDA7XG59XG5cbi5ib3QtbGluZTo6YmVmb3JlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjb250ZW50OiAnJztcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMXB4O1xuICBib3R0b206IDJweDtcbiAgbGVmdDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2FjYWNhYztcbn1cblxuLnRoZW5rcy1ibG9nLXRvcC1uZXdzLWluZm8ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB0b3A6IDI1cHg7XG4gIGxlZnQ6IDI1cHg7XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2JkMjQyYjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwYWRkaW5nOiA1cHggMTBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIHotaW5kZXg6IDIwO1xufVxuXG4uYnRuLW1haW4ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgYm9yZGVyOiAycHggc29saWQgI2JkMjQyYjtcbiAgYm9yZGVyLXJhZGl1czogNXB4IDVweCA1cHggNXB4O1xuICBwYWRkaW5nOiAxMnB4IDI0cHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB0cmFuc2l0aW9uOiAwLjVzIGVhc2UtaW4tb3V0O1xufVxuXG4uYnRuLW9wcyB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGNvbG9yOiAjYmQyNDJiO1xufVxuXG4uYnRuLXJlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiZDI0MmI7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4ubGluZS1ncmV5IC5ib3QtZ3JleSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy1ib3R0b206IDUwcHg7XG59XG5cbi5saW5lLWdyZXkgLmJvdC1ncmV5OjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29udGVudDogJyc7XG4gIHdpZHRoOiA5MCU7XG4gIGhlaWdodDogMXB4O1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgYm90dG9tOiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEyMiwgMTIyLCAxMjIsIDAuNSk7XG59XG5cbi5tYWluLXdyYXAge1xuICBkaXNwbGF5OiBub25lO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDEwMHZ3O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgei1pbmRleDogOTAwO1xufVxuXG4ucG9wYXAtY29udGVudCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xuICBkaXNwbGF5OiBub25lO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBsZWZ0OiA1MCU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgbWF4LXdpZHRoOiA2MDBweDtcbiAgd2lkdGg6IDgwJTtcbiAgei1pbmRleDogOTUwO1xuICBwYWRkaW5nOiA2MHB4IDgwcHg7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggMTBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjUpO1xuICBib3JkZXItcmFkaXVzOiAxNXB4IDE1cHggMTVweCAxNXB4O1xufVxuXG4ucG9wYXAtY29udGVudC1mb3JtIHtcbiAgbWF4LXdpZHRoOiA1NTBweDtcbn1cblxuLnBvcGFwLWNvbnRlbnQtdGl0bGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtc2l6ZTogMS44NzVlbTtcbiAgY29sb3I6ICMyYzJjMmM7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5wb3BhcC1jb250ZW50LXRleHQge1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogIzJjMmMyYztcbiAgZm9udC1zaXplOiAxZW07XG4gIG1hcmdpbi1ib3R0b206IDQwcHg7XG59XG5cbi5wb3BhcC1jb250ZW50LWxhYmVsIHtcbiAgZm9udC1mYW1pbHk6IFwiRnV0dXJhIFBUXCIsIFJvYm90bztcbiAgY29sb3I6ICMyYzJjMmM7XG4gIGZvbnQtc2l6ZTogMS4xMjVlbTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbn1cblxuLnBvcGFwLWNvbnRlbnQtbGFiZWwtd3JhcCB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5wb3BhcC1jb250ZW50LWxhYmVsLXdyYXAgLnBvcGFwLWNvbnRlbnQtbGFiZWwge1xuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xufVxuXG4ucG9wYXAtY29udGVudC1sYWJlbC13cmFwIGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5wb3BhcC1jb250ZW50LWxhYmVsLXdyYXAgbGFiZWwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1yaWdodDogMzBweDtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5wb3BhcC1jb250ZW50LWxhYmVsLXdyYXAgbGFiZWw6OmFmdGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjb250ZW50OiAnJztcbiAgd2lkdGg6IDEycHg7XG4gIGhlaWdodDogMTJweDtcbiAgbGVmdDogMDtcbiAgdG9wOiA1MCU7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICBib3JkZXI6IDFweCBzb2xpZCAjMmMyYzJjO1xuICB0cmFuc2l0aW9uOiAwLjVzIGVhc2UtaW4tb3V0O1xuICBsaW5lLWhlaWdodDogMTtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLnBvcGFwLWNvbnRlbnQtbGFiZWwtd3JhcCBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl06Y2hlY2tlZCArIGxhYmVsOjphZnRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiZDI0MmI7XG4gIGNvbnRlbnQ6ICfinJQnO1xufVxuXG4ucG9wYXAtY29udGVudC1pbnB1dCB7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAxMHB4IDE1cHg7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMyYzJjMmM7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG59XG5cbi5wb3BhcC1jb250ZW50LXN1Ym1pdCB7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmQyNDJiO1xuICBib3JkZXI6IG5vbmU7XG4gIGNvbG9yOiAjZmZmO1xuICBwYWRkaW5nOiAxNXB4IDA7XG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLnBvcGFwLWNvbnRlbnQtZW5kIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAwLjc1ZW07XG4gIGNvbG9yOiAjMmMyYzJjO1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4ucG9wYXAtY29udGVudC1jbG9zZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDMwcHg7XG4gIHRvcDogMzBweDtcbiAgei1pbmRleDogOTkwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGhlaWdodDogMjJweDtcbiAgcGFkZGluZy10b3A6IDExcHg7XG59XG5cbi5wb3BhcC1jb250ZW50LWNsb3NlOmhvdmVyIC5wb3BhcC1jb250ZW50LWNsb3NlLWxpbmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmQyNDJiO1xufVxuXG4ucG9wYXAtY29udGVudC1jbG9zZTpob3ZlciAucG9wYXAtY29udGVudC1jbG9zZS1saW5lOjphZnRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiZDI0MmI7XG59XG5cbi5wb3BhcC1jb250ZW50LWNsb3NlLWxpbmUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTdweDtcbiAgaGVpZ2h0OiA0cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyYzJjMmM7XG4gIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgdHJhbnNpdGlvbjogMC41cyBlYXNlLWluLW91dDtcbn1cblxuLnBvcGFwLWNvbnRlbnQtY2xvc2UtbGluZTo6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGNvbnRlbnQ6ICcnO1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDE3cHg7XG4gIGhlaWdodDogNHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmMyYzJjO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xuICB0cmFuc2l0aW9uOiAwLjVzIGVhc2UtaW4tb3V0O1xufVxuXG4ubGluZS1ncmV5IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nLWJvdHRvbTogODBweDtcbn1cblxuLmxpbmUtZ3JleTo6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGNvbnRlbnQ6ICcnO1xuICB3aWR0aDogOTAlO1xuICBoZWlnaHQ6IDFweDtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gIGJvdHRvbTogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0NCwgNDQsIDQ0LCAwLjUpO1xufVxuXG4uZm9vdGVyLXZpZGVvLXRpdGxlLXRpbWUge1xuICBtYXJnaW4tYm90dG9tOiA0MHB4O1xufVxuXG4uYW5pbWF0ZS1saW5lIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uYW5pbWF0ZS1saW5lOjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29udGVudDogJyc7XG4gIHdpZHRoOiAyMHB4O1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gIGhlaWdodDogMjUwJTtcbiAgbGVmdDogLTIwJTtcbiAgdG9wOiAtMzBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpO1xufVxuXG4uaGVhZGVyLWFuaW1hdGUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5oZWFkZXItYW5pbWF0ZS1pdGVtIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuQGtleWZyYW1lcyBidG5SZWQge1xuICAwJSB7XG4gICAgbGVmdDogLTMwJTtcbiAgfVxuXG4gIDEwMCUge1xuICAgIGxlZnQ6IDE1MCU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDgwMHB4KSB7XG4gIC5idG4tbWFpbjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2JkMjQyYjtcbiAgICBjb2xvcjogI2ZmZjtcbiAgfVxuXG4gIC5idG4tb3BzOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmQyNDJiO1xuICAgIGNvbG9yOiAjZmZmO1xuICB9XG5cbiAgLmJ0bi1yZWQ6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgY29sb3I6ICNiZDI0MmI7XG4gIH1cblxuICAuYW5pbWF0ZS1saW5lOmhvdmVyOjphZnRlciB7XG4gICAgYW5pbWF0aW9uOiBidG5SZWQgNHMgaW5maW5pdGU7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEyMDBweCkge1xuICAud3JhcHBlciB7XG4gICAgcGFkZGluZzogMCAxNXB4O1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDExMDBweCkge1xuICAud3JhcHBlciB7XG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG4gIH1cblxuICAud3JhcHBlciB7XG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG4gIH1cblxuICAud3JhcHBlci1mdWxsIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gICAgcGFkZGluZy1yaWdodDogMTVweDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTUwcHgpIHtcbiAgYm9keSB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5NDBweCkge1xuICAucG9wYXAtY29udGVudCB7XG4gICAgcGFkZGluZzogMTVweCAzMHB4O1xuICB9XG5cbiAgLnBvcGFwLWNvbnRlbnQtY2xvc2Uge1xuICAgIHJpZ2h0OiAxMHB4O1xuICAgIHRvcDogM3B4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA4MzBweCkge1xuICAudGl0bGUtcGFnZSB7XG4gICAgZm9udC1zaXplOiA0dnc7XG4gIH1cblxuICAudGl0bGUtcGFnZSB7XG4gICAgZm9udC1zaXplOiAyLjVlbTtcbiAgfVxuXG4gIC5wcmV2LXBhZ2Uge1xuICAgIGZvbnQtc2l6ZTogMS40ZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ2MHB4KSB7XG4gIC5wb3BhcC1jb250ZW50IHtcbiAgICB3aWR0aDogOTUlO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzOTBweCkge1xuICAucG9wYXAtY29udGVudC1sYWJlbC13cmFwIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtaGVpZ2h0OiA3MDBweCkge1xuICAucG9wYXAtY29udGVudCB7XG4gICAgb3ZlcmZsb3c6IHNjcm9sbDtcbiAgfVxufSIsIkBjb2x1bW5zOiAxMjtcbkBhdG9tOiAoMTAwJSAvIEBjb2x1bW5zKTtcblxuQGJyZWFrX2xnOiAxMjAwcHg7XG5AYnJlYWtfbWQ6IDExMDBweDtcbkBicmVha19zbTogNzIwcHg7XG5AYnJlYWtfeHM6IDU3NnB4O1xuXG5Ab2Zmc2V0OiAxNXB4O1xuQG9mZnNldF9sZzogQG9mZnNldDtcbkBvZmZzZXRfbWQ6IEBvZmZzZXQ7XG5Ab2Zmc2V0X3NtOiBAb2Zmc2V0O1xuQG9mZnNldF94czogQG9mZnNldDtcblxuQG9mZnNldF9vbmVfc2lkZTogKEBvZmZzZXQgLyAyKTtcbkBvZmZzZXRfbGdfb25lX3NpZGU6IChAb2Zmc2V0X2xnIC8gMik7XG5Ab2Zmc2V0X21kX29uZV9zaWRlOiAoQG9mZnNldF9tZCAvIDIpO1xuQG9mZnNldF9zbV9vbmVfc2lkZTogKEBvZmZzZXRfc20gLyAyKTtcbkBvZmZzZXRfeHNfb25lX3NpZGU6IChAb2Zmc2V0X3hzIC8gMik7XG5cbkBmaWVsZHM6IDMwcHg7XG5AZmllbGRzX21kOiAxNXB4O1xuXG4ud3JhcHBlci1mdWxsKCl7XG4gICAgcGFkZGluZy1sZWZ0OiBAZmllbGRzO1xuICAgIHBhZGRpbmctcmlnaHQ6IEBmaWVsZHM7XG5cbiAgICAubWQtYmxvY2soe1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IEBmaWVsZHNfbWQ7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IEBmaWVsZHNfbWQ7XG4gICAgfSk7XG59XG5cbi5yb3ctb2Zmc2V0cygpe1xuICAgIG1hcmdpbi1sZWZ0OiAoQG9mZnNldF9vbmVfc2lkZSAqIC0xKTtcbiAgICBtYXJnaW4tcmlnaHQ6IChAb2Zmc2V0X29uZV9zaWRlICogLTEpO1xufVxuXG4uY29sLW9mZnNldHMoQHR5cGUpe1xuICAgIEB7dHlwZX0tbGVmdDogQG9mZnNldF9vbmVfc2lkZTtcbiAgICBAe3R5cGV9LXJpZ2h0OiBAb2Zmc2V0X29uZV9zaWRlO1xufVxuXG4ud3JhcHBlcigpe1xuICAgIG1heC13aWR0aDogMTE3MHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIC53cmFwcGVyLWZ1bGwoKTtcbn1cblxuLnJvdy1mbGV4KCl7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgLnJvdy1vZmZzZXRzKCk7XG59XG5cbi5yb3ctZmxvYXQoKXtcbiAgICAucm93LW9mZnNldHMoKTtcbiAgICAuY2xlYXJmaXgoKTtcbn1cblxuLnJvdy1pYigpe1xuICAgIC5yb3ctb2Zmc2V0cygpO1xufVxuXG4uY29sKCl7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gICAgLmNvbC1vZmZzZXRzKG1hcmdpbik7XG59XG5cbi5jb2wtZmxvYXQoKXtcbiAgICBmbG9hdDogbGVmdDtcbn1cblxuLmNvbC1pYigpe1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xufVxuXG4uY29sLXBhZGRpbmcoKXtcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gICAgLmNvbC1vZmZzZXRzKHBhZGRpbmcpO1xufVxuXG4uc2l6ZShAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgd2lkdGg6IH5cImNhbGMoQHt2YWx9IC0gQHtvZmZzZXR9KVwiO1xufVxuXG4uc2l6ZS1sZyhAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLmxnKHdpZHRoLCB+XCJjYWxjKEB7dmFsfSAtIEB7b2Zmc2V0X2xnfSlcIik7XG59XG5cbi5zaXplLW1kKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubWQod2lkdGgsIH5cImNhbGMoQHt2YWx9IC0gQHtvZmZzZXRfbWR9KVwiKTtcbn1cblxuLnNpemUtc20oQG4pe1xuICAgIEB2YWw6IDEwMCUgLyBAY29sdW1ucyAqIEBuO1xuICAgIC5zbSh3aWR0aCwgflwiY2FsYyhAe3ZhbH0gLSBAe29mZnNldF9zbX0pXCIpO1xufVxuXG4uc2l6ZS14cyhAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLnhzKHdpZHRoLCB+XCJjYWxjKEB7dmFsfSAtIEB7b2Zmc2V0X3hzfSlcIik7XG59XG5cbi5zaGlmdChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgbWFyZ2luLWxlZnQ6IH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfb25lX3NpZGV9KVwiO1xuICAgIG1hcmdpbi1yaWdodDogflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9vbmVfc2lkZX0pXCI7XG59XG5cbi5zaGlmdC1sZWZ0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICBtYXJnaW4tbGVmdDogflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9vbmVfc2lkZX0pXCI7XG59XG5cbi5zaGlmdC1yaWdodChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgbWFyZ2luLXJpZ2h0OiB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcbn1cblxuLnNoaWZ0LXBhZGRpbmcoQG4pe1xuICAgIEB2YWw6IDEwMCUgLyBAY29sdW1ucyAqIEBuO1xuICAgIHBhZGRpbmctbGVmdDogflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9vbmVfc2lkZX0pXCI7XG4gICAgcGFkZGluZy1yaWdodDogflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9vbmVfc2lkZX0pXCI7XG59XG5cbi5zaGlmdC1wYWRkaW5nLWxlZnQoQG4pe1xuICAgIEB2YWw6IDEwMCUgLyBAY29sdW1ucyAqIEBuO1xuICAgIHBhZGRpbmctbGVmdDogflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9vbmVfc2lkZX0pXCI7XG59XG5cbi5zaGlmdC1wYWRkaW5nLXJpZ2h0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICBwYWRkaW5nLXJpZ2h0OiB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X29uZV9zaWRlfSlcIjtcbn1cblxuLnNoaWZ0LWxnKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubGcobWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbGdfb25lX3NpZGV9KVwiKTtcbiAgICAubGcobWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X2xnX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC1sZy1sZWZ0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubGcobWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbGdfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LWxnLXJpZ2h0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubGcobWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X2xnX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC1sZy1wYWRkaW5nKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubGcocGFkZGluZy1sZWZ0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X2xnX29uZV9zaWRlfSlcIik7XG4gICAgLmxnKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbGdfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LWxnLXBhZGRpbmctbGVmdChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLmxnKHBhZGRpbmctbGVmdCwgflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9sZ19vbmVfc2lkZX0pXCIpO1xufVxuXG4uc2hpZnQtbGctcGFkZGluZy1yaWdodChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLmxnKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbGdfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LW1kKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubWQobWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbWRfb25lX3NpZGV9KVwiKTtcbiAgICAubWQobWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X21kX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC1tZC1sZWZ0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubWQobWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbWRfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LW1kLXJpZ2h0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubWQobWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X21kX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC1tZC1wYWRkaW5nKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAubWQocGFkZGluZy1sZWZ0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X21kX29uZV9zaWRlfSlcIik7XG4gICAgLm1kKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbWRfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LW1kLXBhZGRpbmctbGVmdChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLm1kKHBhZGRpbmctbGVmdCwgflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9tZF9vbmVfc2lkZX0pXCIpO1xufVxuXG4uc2hpZnQtbWQtcGFkZGluZy1yaWdodChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLm1kKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfbWRfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LXNtKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAuc20obWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfc21fb25lX3NpZGV9KVwiKTtcbiAgICAuc20obWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X3NtX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC1zbS1sZWZ0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAuc20obWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfc21fb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LXNtLXJpZ2h0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAuc20obWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X3NtX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC1zbS1wYWRkaW5nKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAuc20ocGFkZGluZy1sZWZ0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X3NtX29uZV9zaWRlfSlcIik7XG4gICAgLnNtKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfc21fb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LXNtLXBhZGRpbmctbGVmdChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLnNtKHBhZGRpbmctbGVmdCwgflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF9zbV9vbmVfc2lkZX0pXCIpO1xufVxuXG4uc2hpZnQtc20tcGFkZGluZy1yaWdodChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLnNtKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfc21fb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LXhzKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAueHMobWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfeHNfb25lX3NpZGV9KVwiKTtcbiAgICAueHMobWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X3hzX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC14cy1sZWZ0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAueHMobWFyZ2luLWxlZnQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfeHNfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LXhzLXJpZ2h0KEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAueHMobWFyZ2luLXJpZ2h0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X3hzX29uZV9zaWRlfSlcIik7XG59XG5cbi5zaGlmdC14cy1wYWRkaW5nKEBuKXtcbiAgICBAdmFsOiAxMDAlIC8gQGNvbHVtbnMgKiBAbjtcbiAgICAueHMocGFkZGluZy1sZWZ0LCB+XCJjYWxjKEB7dmFsfSArIEB7b2Zmc2V0X3hzX29uZV9zaWRlfSlcIik7XG4gICAgLnhzKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfeHNfb25lX3NpZGV9KVwiKTtcbn1cblxuLnNoaWZ0LXhzLXBhZGRpbmctbGVmdChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLnhzKHBhZGRpbmctbGVmdCwgflwiY2FsYyhAe3ZhbH0gKyBAe29mZnNldF94c19vbmVfc2lkZX0pXCIpO1xufVxuXG4uc2hpZnQteHMtcGFkZGluZy1yaWdodChAbil7XG4gICAgQHZhbDogMTAwJSAvIEBjb2x1bW5zICogQG47XG4gICAgLnhzKHBhZGRpbmctcmlnaHQsIH5cImNhbGMoQHt2YWx9ICsgQHtvZmZzZXRfeHNfb25lX3NpZGV9KVwiKTtcbn1cblxuLmxnKEBuYW1lLCBAdmFsdWUpe1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19sZyl7XG4gICAgICAgIEB7bmFtZX06IEB2YWx1ZTtcbiAgICB9XG59XG5cbi5sZy1ibG9jayhAY29udGVudCl7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX2xnKXtcbiAgICAgICAgQGNvbnRlbnQoKTtcbiAgICB9XG59XG5cbi5tZChAbmFtZSwgQHZhbHVlKXtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfbWQpe1xuICAgICAgICBAe25hbWV9OiBAdmFsdWU7XG4gICAgfVxufVxuXG4ubWQtYmxvY2soQGNvbnRlbnQpe1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha19tZCl7XG4gICAgICAgIEBjb250ZW50KCk7XG4gICAgfVxufVxuXG4uc20oQG5hbWUsIEB2YWx1ZSl7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3NtKXtcbiAgICAgICAgQHtuYW1lfTogQHZhbHVlO1xuICAgIH1cbn1cblxuLnNtLWJsb2NrKEBjb250ZW50KXtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiBAYnJlYWtfc20pe1xuICAgICAgICBAY29udGVudCgpO1xuICAgIH1cbn1cblxuLnhzKEBuYW1lLCBAdmFsdWUpe1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IEBicmVha194cyl7XG4gICAgICAgIEB7bmFtZX06IEB2YWx1ZTtcbiAgICB9XG59XG5cbi54cy1ibG9jayhAY29udGVudCl7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQGJyZWFrX3hzKXtcbiAgICAgICAgQGNvbnRlbnQoKTtcbiAgICB9XG59XG5cbi5mcm9tKEBtaW5fd2lkdGgsIEBjb250ZW50KXtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiBAbWluX3dpZHRoKXtcbiAgICAgICAgQGNvbnRlbnQoKTtcbiAgICB9XG59XG5cbi50byhAbWF4X3dpZHRoLCBAY29udGVudCl7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogQG1heF93aWR0aCl7XG4gICAgICAgIEBjb250ZW50KCk7XG4gICAgfVxufVxuXG4uZnJvbS10byhAbWluX3dpZHRoLCBAbWF4X3dpZHRoLCBAY29udGVudCl7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogQG1pbl93aWR0aCkgYW5kIChtYXgtd2lkdGg6IEBtYXhfd2lkdGgpe1xuICAgICAgICBAY29udGVudCgpO1xuICAgIH1cbn1cblxuLnUtcm93LWZsZXgoQG9mZnNldCl7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgbWFyZ2luLWxlZnQ6IChAb2Zmc2V0IC8gLTIpO1xuICAgIG1hcmdpbi1yaWdodDogKEBvZmZzZXQgLyAtMik7XG59XG5cbi51LWNvbChAb2Zmc2V0KXtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgICBtYXJnaW4tbGVmdDogKEBvZmZzZXQgLyAyKTtcbiAgICBtYXJnaW4tcmlnaHQ6IChAb2Zmc2V0IC8gMik7XG59XG5cbi51LXNpemUoQG4sIEBjb2x1bW5zLCBAb2Zmc2V0KXtcbiAgICB3aWR0aDogflwiY2FsYygxMDAlIC8gQHtjb2x1bW5zfSAqIEB7bn0gLSBAe29mZnNldH0pXCI7XG59XG5cbi5yZXNldCgpe1xuICAgIGJvZHksZGl2LGRsLGR0LGRkLHVsLGxpLGgxLGgyLGgzLGg0LGg1LGg2LHByZSxjb2RlLGZvcm0sZmllbGRzZXQsaW5wdXQsdGV4dGFyZWEscCxibG9ja3F1b3RlLHRoLHRke1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgfVxuICAgIHRhYmxle1xuICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgICAgICBib3JkZXItc3BhY2luZzogMDtcbiAgICB9XG4gICAgZmllbGRzZXQsaW1nLGFiYnJ7XG4gICAgICAgIGJvcmRlcjogMDtcbiAgICB9XG4gICAgYWRkcmVzcyxjYXB0aW9uLGNpdGUsY29kZSxkZm4sZW0sc3Ryb25nLHRoLHZhcntcbiAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIH1cbiAgICB1bCBsaXtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICB9XG4gICAgY2FwdGlvbix0aHtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICB9XG4gICAgaDEsaDIsaDMsaDQsaDUsaDZ7XG4gICAgICAgIGZvbnQtc2l6ZTogMTAwJTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICB9XG4gICAgc3Vwe1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC10b3A7XG4gICAgfVxuICAgIHN1YntcbiAgICAgICAgdmVydGljYWwtYWxpZ246IHRleHQtYm90dG9tO1xuICAgIH1cbiAgICBpbnB1dCx0ZXh0YXJlYSxzZWxlY3R7XG4gICAgICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgICAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xuICAgIH1cbiAgICBsZWdlbmR7XG4gICAgICAgIGNvbG9yOiAjMDAwO1xuICAgIH1cbiAgICBhcnRpY2xlLGFzaWRlLGRldGFpbHMsZmlnY2FwdGlvbixmaWd1cmUsZm9vdGVyLGhlYWRlcixoZ3JvdXAsbWVudSxuYXYsc2VjdGlvbixtYWlue1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gICAgaW1ne1xuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogYXV0bztcbiAgICB9XG59XG5cbi5kZWJ1ZyhAYmFja2dyb3VuZCwgQG91dGxpbmUpe1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIFxuICAgID4gZGl2e1xuICAgICAgICBoZWlnaHQ6IGluaGVyaXQ7XG4gICAgICAgIC53cmFwcGVyKCk7XG4gICAgICAgIFxuICAgICAgICA+IGRpdntcbiAgICAgICAgICAgIGhlaWdodDogaW5oZXJpdDtcbiAgICAgICAgICAgIC5yb3ctZmxleCgpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICA+IGRpdntcbiAgICAgICAgICAgICAgICAuY29sKCk7XG4gICAgICAgICAgICAgICAgLnNpemUoMSk7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiBpbmhlcml0O1xuICAgICAgICAgICAgICAgIG91dGxpbmU6IEBvdXRsaW5lO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IEBiYWNrZ3JvdW5kO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4uY2xlYXJmaXgoKXtcbiAgICAmOjphZnRlcntcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGNsZWFyOiBib3RoO1xuICAgIH1cbn0iLCJAaW1wb3J0ICdzbWFydC1ncmlkJztcclxuXHJcbkBtYWluOiAjYmQyNDJiO1xyXG5Ad2hpdGU6ICNmZmY7XHJcbkBtYWluVGV4dDogIzJjMmMyYztcclxuXHJcblxyXG5AcGhvbmU6IDgwMHB4O1xyXG5AdGltZTogMC41cyBlYXNlLWluLW91dDtcclxuLnJlc2V0KCk7XHJcbip7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG4ud3JhcHBlcntcclxuICAgIC53cmFwcGVyKCk7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KSB7XHJcbiAgICAgICAgcGFkZGluZzogMCAxNXB4O1xyXG4gICAgfVxyXG59XHJcbi53cmFwcGVyLWZ1bGx7XHJcbiAgICAud3JhcHBlci1mdWxsKCk7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5tYWlue1xyXG4gICAgbWFyZ2luLXRvcDogNjBweDtcclxufVxyXG5ib2R5e1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nICwgXCJGdXR1cmEgUFRcIiA7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTUwcHgpIHtcclxuICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi50aXRsZS1wYWdle1xyXG4gICAgZm9udC1zaXplOiAyLjgxMjVlbTtcclxuICAgIGNvbG9yOiBAd2hpdGU7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuMmVtO1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgIGxldHRlci1zcGFjaW5nOiA2cHg7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogODMwcHgpIHtcclxuICAgICAgICBmb250LXNpemU6IDR2dztcclxuICAgICB9XHJcbiAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDgzMHB4KSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAyLjVlbTtcclxuICAgICB9XHJcbn1cclxuLnByZXYtcGFnZXtcclxuICAgIGNvbG9yOiBAd2hpdGU7XHJcbiAgICBmb250LXNpemU6IDEuNjc1ZW07XHJcbiAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWF4LXdpZHRoOiAxMDAwcHg7XHJcbiAgICBtYXJnaW46IDMwcHggYXV0byAwIGF1dG87XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogODMwcHgpIHtcclxuICAgICAgICBmb250LXNpemU6IDEuNGVtO1xyXG4gICAgIH1cclxufVxyXG4uZncxMDB7XHJcbiAgICBmb250LXdlaWdodDogMTAwO1xyXG59XHJcbi5yZWR7XHJcbiAgICBjb2xvcjogI2JkMjQyYjtcclxufVxyXG4ud2hpdGV7XHJcbiAgICBjb2xvcjogQHdoaXRlXHJcbn1cclxuLmJvdC1saW5le1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgJjo6YWZ0ZXJ7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIHdpZHRoOiA3MHB4O1xyXG4gICAgICAgIGhlaWdodDogNHB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IEBtYWluO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgfVxyXG4gICAgICY6OmJlZm9yZXtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMXB4O1xyXG4gICAgICAgICAgICBib3R0b206IDJweDtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRlbihAbWFpblRleHQgLCA1MCUpO1xyXG4gICAgICAgIH1cclxufVxyXG4udGhlbmtzLWJsb2ctdG9wLW5ld3MtaW5mb3tcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGNvbG9yOiBAd2hpdGU7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgdG9wOiAyNXB4O1xyXG4gICAgbGVmdDogMjVweDtcclxuZm9udC1zaXplOiAxMXB4O1xyXG5iYWNrZ3JvdW5kLWNvbG9yOiBAbWFpbjtcclxuZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5wYWRkaW5nOiA1cHggMTBweDtcclxudGV4dC1hbGlnbjogY2VudGVyO1xyXG5ib3JkZXItcmFkaXVzOiA1cHg7XHJcbnotaW5kZXg6IDIwO1xyXG59XHJcbi5idG4tbWFpbntcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgIEBtYWluO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4IDVweCA1cHggNXB4O1xyXG4gICAgcGFkZGluZzogMTJweCAyNHB4O1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiBcclxuICAgIHRyYW5zaXRpb246IEB0aW1lO1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IEBwaG9uZSkge1xyXG4gICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IEBtYWluO1xyXG4gICAgICAgICAgICBjb2xvcjogQHdoaXRlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4uYnRuLW9wc3tcclxuICAgIGJhY2tncm91bmQ6IG5vbmU7XHJcbiAgICBjb2xvcjogQG1haW47XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogQHBob25lKSB7XHJcbiAgICAgICAgJjpob3ZlcntcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogQG1haW47XHJcbiAgICAgICAgICAgIGNvbG9yOiBAd2hpdGU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbi5idG4tcmVke1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogQG1haW47XHJcbiAgICBjb2xvcjogQHdoaXRlO1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IEBwaG9uZSkge1xyXG4gICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IG5vbmU7XHJcbiAgICAgICAgICAgIGNvbG9yOiBAbWFpbjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5saW5lLWdyZXlcclxuXHJcblxyXG4uYm90LWdyZXl7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogNTBweDtcclxuICAgICY6OmFmdGVye1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgIGhlaWdodDogMXB4O1xyXG4gICAgICAgIGxlZnQ6IDUwJTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcbiAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTIyLDEyMiwxMjIsMC41KTtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbi5tYWluLXdyYXB7XHJcbiBkaXNwbGF5OiBub25lO1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHRvcDogMDtcclxuICAgIHdpZHRoOiAxMDB2dztcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsMC41KTtcclxuICAgIHotaW5kZXg6IDkwMDtcclxufVxyXG4ucG9wYXAtY29udGVudHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlICwgLTUwJSk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBAd2hpdGU7XHJcbiAgICBtYXgtd2lkdGg6IDYwMHB4O1xyXG4gICAgd2lkdGg6IDgwJTtcclxuICAgIHotaW5kZXg6IDk1MDtcclxuICAgIHBhZGRpbmc6IDYwcHggODBweDtcclxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMTBweCAwcHggcmdiYSgwLDAsMCwwLjUpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTVweCAxNXB4IDE1cHggMTVweDtcclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOjk0MHB4KSB7XHJcbiAgICAgICAgcGFkZGluZzogMTVweCAzMHB4O1xyXG4gICAgfVxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6NDYwcHgpIHtcclxuICAgICAgICB3aWR0aDogOTUlO1xyXG4gICAgfVxyXG4gICAgQG1lZGlhIChtYXgtaGVpZ2h0OjcwMHB4KSB7XHJcbiAgICAgICAgb3ZlcmZsb3c6IHNjcm9sbDtcclxuICAgIH1cclxuICAgICYtZm9ybXtcclxuICAgICAgICBtYXgtd2lkdGg6IDU1MHB4O1xyXG4gICAgfVxyXG4gICAgJi10aXRsZXtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBmb250LXNpemU6IDEuODc1ZW07XHJcbiAgICAgICAgY29sb3I6IEBtYWluVGV4dDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS41O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgIH1cclxuICAgICYtdGV4dHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBjb2xvcjogQG1haW5UZXh0O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMWVtO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDQwcHg7XHJcbiAgICB9XHJcbiAgICAmLWxhYmVse1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIkZ1dHVyYSBQVFwiLCBSb2JvdG87XHJcbiAgICAgICAgY29sb3I6IEBtYWluVGV4dDtcclxuICAgICAgICBmb250LXNpemU6IDEuMTI1ZW07XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICAgICAgJi13cmFwe1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDozOTBweCl7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAucG9wYXAtY29udGVudC1sYWJlbHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaW5wdXRbdHlwZT1cImNoZWNrYm94XCJde1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBsYWJlbHtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMzBweDtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMjBweDtcclxuICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICAgICAgICAgICY6OmFmdGVye1xyXG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTJweDtcclxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEycHg7XHJcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgICAgICAgICB0b3A6IDUwJTtcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIEBtYWluVGV4dDtcclxuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBAdGltZTtcclxuICAgICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMTtcclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgIGNvbG9yOiBAd2hpdGU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdOmNoZWNrZWQgKyBsYWJlbHtcclxuICAgICAgICAgICAgICAgICY6OmFmdGVye1xyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IEBtYWluO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICfinJQnO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi1pbnB1dHtcclxuICAgICAgICBmb250LWZhbWlseTogJ1JvYm90byc7XHJcbiAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIHBhZGRpbmc6IDEwcHggMTVweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIEBtYWluVGV4dDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgfVxyXG4gICAgJi1zdWJtaXR7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogQG1haW47XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIGNvbG9yOiBAd2hpdGU7XHJcbiAgICAgICAgcGFkZGluZzogMTVweCAwO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgfVxyXG4gICAgJi1lbmR7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMC43NWVtO1xyXG4gICAgICAgIGNvbG9yOiBAbWFpblRleHQ7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgIH1cclxufVxyXG4ucG9wYXAtY29udGVudC1jbG9zZXtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHJpZ2h0OiAzMHB4O1xyXG4gICAgdG9wOiAzMHB4O1xyXG4gICAgei1pbmRleDogOTkwO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgaGVpZ2h0OiAyMnB4O1xyXG4gICAgcGFkZGluZy10b3A6IDExcHg7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDo5NDBweCkge1xyXG4gICAgICAgIHJpZ2h0OiAxMHB4O1xyXG4gICAgICAgIHRvcDogM3B4O1xyXG4gICAgfVxyXG4gICAgJjpob3ZlcntcclxuICAgICAgLnBvcGFwLWNvbnRlbnQtY2xvc2UtbGluZXtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBAbWFpbjtcclxuICAgICAgICAmOjphZnRlcntcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogQG1haW47XHJcbiAgICAgICAgfVxyXG4gICAgICB9ICBcclxuICAgIH1cclxuICAgICYtbGluZXtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgd2lkdGg6IDE3cHg7XHJcbiAgICAgICAgaGVpZ2h0OiA0cHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogQG1haW5UZXh0O1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuICAgICAgICB0cmFuc2l0aW9uOiBAdGltZTtcclxuICAgICAgICAmOjphZnRlcntcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxN3B4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDRweDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogQG1haW5UZXh0O1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBAdGltZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuLmxpbmUtZ3JleXtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHBhZGRpbmctYm90dG9tOiA4MHB4O1xyXG4gICAgJjo6YWZ0ZXJ7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICAgICAgaGVpZ2h0OiAxcHg7XHJcbiAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcclxuICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0NCw0NCw0NCwuNSk7XHJcbiAgICB9XHJcbn1cclxuLmZvb3Rlci12aWRlby10aXRsZS10aW1le1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNDBweDtcclxufVxyXG4uYW5pbWF0ZS1saW5le1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICY6OmFmdGVye1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICB3aWR0aDogMjBweDtcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbiAgICAgICAgaGVpZ2h0OiAyNTAlO1xyXG4gICAgICAgIGxlZnQ6IC0yMCU7XHJcbiAgICAgICAgdG9wOiAtMzBweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LDAuNSk7XHJcbiAgICB9XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IEBwaG9uZSkge1xyXG4gICAgICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICAgICAgJjo6YWZ0ZXJ7XHJcbiAgICAgICAgICAgICAgICAgICAgYW5pbWF0aW9uOiBidG5SZWQgNHMgaW5maW5pdGU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbn1cclxuLmhlYWRlci1hbmltYXRle1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgJi1pdGVte1xyXG4gICAgICAgZGlzcGxheTogbm9uZTsgIFxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuQGtleWZyYW1lcyBidG5SZWQge1xyXG4gICAgMCUge1xyXG4gICAgICAgIGxlZnQ6IC0zMCU7XHJcbiAgICB9XHJcbiAgICAxMDAlIHtcclxuICAgICAgICBsZWZ0OiAxNTAlO1xyXG4gICAgfVxyXG59Il19 */
