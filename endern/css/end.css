*,::after,::before{margin:0;padding:0;box-sizing:border-box}.sf-download-bar{display:none}.container{max-width:1700px;margin:0 auto;padding-left:15px;padding-right:15px}.vis_item{-webkit-transform:translateX(100%);-ms-transform:translateX(100%);transform:translateX(100%);-webkit-transition:1.5s;transition:1.5s}.show_item{-webkit-transform:translate(0);-ms-transform:translate(0);transform:translate(0);-webkit-transition:1.5s;transition:1.5s}.swiper-container{width:1920px;height:100%}.progress circle{fill:#ccc;stroke:#00d6d6;stroke-width:10}.slider-bul{width:15px;height:15px;display:inline-block;background-color:rgba(255,255,255,.5);border-radius:50%;margin-right:35px}.slider-bul:last-of-type{margin-right:0}.slider-bul-acive{background-color:#fff;box-sizing:border-box;border:1px solid #fff}.slider-wrapper{display:block;width:250px;position:relative;margin:0 auto}.progress-round__wrap{width:110px;height:110px;position:absolute;left:0;top:0;pointer-events:none;text-align:center}.cir{width:10px;height:10px;background-color:rgba(255,255,255,.3);display:inline-block;border-radius:50%;margin-right:1rem;cursor:pointer}.cir:last-of-type{margin-right:0}.cir-act{position:relative;background-color:#fff}.cir-act-svg{position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);outline:0}.thumbnails{background-image:url(../img/test.png)}.header_sentence .background--dark{color:#fff}.header_sentence .background--dark:hover{border-color:#fff}.line_wrapper .background--dark,.line_wrapper .background--dark::after,.line_wrapper .background--dark::before{background-color:#fff}.background--dark .logo-color{fill:#fff}.btn_footer button{color:#000}footer .background--dark a{color:#fff}footer .background--dark a:hover{color:rgba(255,255,255,.3)}.end{font-family:Roboto;display:-webkit-box;display:flex;-webkit-box-pack:space-evenly;justify-content:space-evenly;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-align:center;align-items:center;background-color:#000;margin-left:270px;color:#fff;font-size:14px;letter-spacing:.05em;padding:0 140px}.end a{position:relative;text-decoration:none;color:#fff}.end a::after{position:absolute;content:'';width:100%;height:1px;background-color:#fff;left:0;bottom:-3px;-webkit-transform:scale(0);-ms-transform:scale(0);transform:scale(0);-webkit-transition:.5s;transition:.5s}.end a:hover::after{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}.end_contact{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;opacity:.5}.end_contact span{font-weight:300;display:inline-block;margin-bottom:10px}.end_contact a{font-weight:400;display:inline-block;margin-bottom:10px;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.end_contact a:last-of-type{margin-bottom:0}.end .copy span{display:block;opacity:.5;font-weight:300;margin-bottom:5px}.end .copy span:last-of-type{margin-bottom:0}.end_link{font-weight:400}.end_link a{display:block;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;margin-bottom:18px}.end_link a:last-of-type{margin-bottom:0}@media screen and (max-width:992px){.container{padding-left:15px;padding-right:15px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
